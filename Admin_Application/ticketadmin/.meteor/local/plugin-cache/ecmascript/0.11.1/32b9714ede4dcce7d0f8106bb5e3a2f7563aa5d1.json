{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/src/definitions/modules/rating.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/src/definitions/modules/rating.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/src/definitions/modules/rating.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","presets":[],"generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/src/definitions/modules/rating.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/src/definitions/modules/rating.js"}},"code":"/*!\n * # Semantic UI - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n;\n\n(function ($, window, document, undefined) {\n  'use strict';\n\n  window = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\n  $.fn.rating = function (parameters) {\n    var $allModules = $(this),\n        moduleSelector = $allModules.selector || '',\n        time = new Date().getTime(),\n        performance = [],\n        query = arguments[0],\n        methodInvoked = typeof query == 'string',\n        queryArguments = [].slice.call(arguments, 1),\n        returnedValue;\n    $allModules.each(function () {\n      var settings = $.isPlainObject(parameters) ? $.extend(true, {}, $.fn.rating.settings, parameters) : $.extend({}, $.fn.rating.settings),\n          namespace = settings.namespace,\n          className = settings.className,\n          metadata = settings.metadata,\n          selector = settings.selector,\n          error = settings.error,\n          eventNamespace = '.' + namespace,\n          moduleNamespace = 'module-' + namespace,\n          element = this,\n          instance = $(this).data(moduleNamespace),\n          $module = $(this),\n          $icon = $module.find(selector.icon),\n          initialLoad,\n          module;\n      module = {\n        initialize: function () {\n          module.verbose('Initializing rating module', settings);\n\n          if ($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if (settings.interactive) {\n            module.enable();\n          } else {\n            module.disable();\n          }\n\n          module.set.initialLoad();\n          module.set.rating(module.get.initialRating());\n          module.remove.initialLoad();\n          module.instantiate();\n        },\n        instantiate: function () {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module.data(moduleNamespace, module);\n        },\n        destroy: function () {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module.removeData(moduleNamespace);\n        },\n        refresh: function () {\n          $icon = $module.find(selector.icon);\n        },\n        setup: {\n          layout: function () {\n            var maxRating = module.get.maxRating(),\n                html = $.fn.rating.settings.templates.icon(maxRating);\n            module.debug('Generating icon html dynamically');\n            $module.html(html);\n            module.refresh();\n          }\n        },\n        event: {\n          mouseenter: function () {\n            var $activeIcon = $(this);\n            $activeIcon.nextAll().removeClass(className.selected);\n            $module.addClass(className.selected);\n            $activeIcon.addClass(className.selected).prevAll().addClass(className.selected);\n          },\n          mouseleave: function () {\n            $module.removeClass(className.selected);\n            $icon.removeClass(className.selected);\n          },\n          click: function () {\n            var $activeIcon = $(this),\n                currentRating = module.get.rating(),\n                rating = $icon.index($activeIcon) + 1,\n                canClear = settings.clearable == 'auto' ? $icon.length === 1 : settings.clearable;\n\n            if (canClear && currentRating == rating) {\n              module.clearRating();\n            } else {\n              module.set.rating(rating);\n            }\n          }\n        },\n        clearRating: function () {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n        bind: {\n          events: function () {\n            module.verbose('Binding events');\n            $module.on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter).on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave).on('click' + eventNamespace, selector.icon, module.event.click);\n          }\n        },\n        remove: {\n          events: function () {\n            module.verbose('Removing events');\n            $module.off(eventNamespace);\n          },\n          initialLoad: function () {\n            initialLoad = false;\n          }\n        },\n        enable: function () {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module.removeClass(className.disabled);\n        },\n        disable: function () {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module.addClass(className.disabled);\n        },\n        is: {\n          initialLoad: function () {\n            return initialLoad;\n          }\n        },\n        get: {\n          initialRating: function () {\n            if ($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n\n            return settings.initialRating;\n          },\n          maxRating: function () {\n            if ($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n\n            return settings.maxRating;\n          },\n          rating: function () {\n            var currentRating = $icon.filter('.' + className.active).length;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n        set: {\n          rating: function (rating) {\n            var ratingIndex = rating - 1 >= 0 ? rating - 1 : 0,\n                $activeIcon = $icon.eq(ratingIndex);\n            $module.removeClass(className.selected);\n            $icon.removeClass(className.selected).removeClass(className.active);\n\n            if (rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon.prevAll().addBack().addClass(className.active);\n            }\n\n            if (!module.is.initialLoad()) {\n              settings.onRate.call(element, rating);\n            }\n          },\n          initialLoad: function () {\n            initialLoad = true;\n          }\n        },\n        setting: function (name, value) {\n          module.debug('Changing setting', name, value);\n\n          if ($.isPlainObject(name)) {\n            $.extend(true, settings, name);\n          } else if (value !== undefined) {\n            if ($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            } else {\n              settings[name] = value;\n            }\n          } else {\n            return settings[name];\n          }\n        },\n        internal: function (name, value) {\n          if ($.isPlainObject(name)) {\n            $.extend(true, module, name);\n          } else if (value !== undefined) {\n            module[name] = value;\n          } else {\n            return module[name];\n          }\n        },\n        debug: function () {\n          if (!settings.silent && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function () {\n          if (!settings.silent && settings.verbose && settings.debug) {\n            if (settings.performance) {\n              module.performance.log(arguments);\n            } else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function () {\n          if (!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function (message) {\n            var currentTime, executionTime, previousTime;\n\n            if (settings.performance) {\n              currentTime = new Date().getTime();\n              previousTime = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time = currentTime;\n              performance.push({\n                'Name': message[0],\n                'Arguments': [].slice.call(message, 1) || '',\n                'Element': element,\n                'Execution Time': executionTime\n              });\n            }\n\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function () {\n            var title = settings.name + ':',\n                totalTime = 0;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function (index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n\n            if (moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n\n            if ($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n\n            if ((console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n\n              if (console.table) {\n                console.table(performance);\n              } else {\n                $.each(performance, function (index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time'] + 'ms');\n                });\n              }\n\n              console.groupEnd();\n            }\n\n            performance = [];\n          }\n        },\n        invoke: function (query, passedArguments, context) {\n          var object = instance,\n              maxDepth,\n              found,\n              response;\n          passedArguments = passedArguments || queryArguments;\n          context = element || context;\n\n          if (typeof query == 'string' && object !== undefined) {\n            query = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function (depth, value) {\n              var camelCaseValue = depth != maxDepth ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1) : query;\n\n              if ($.isPlainObject(object[camelCaseValue]) && depth != maxDepth) {\n                object = object[camelCaseValue];\n              } else if (object[camelCaseValue] !== undefined) {\n                found = object[camelCaseValue];\n                return false;\n              } else if ($.isPlainObject(object[value]) && depth != maxDepth) {\n                object = object[value];\n              } else if (object[value] !== undefined) {\n                found = object[value];\n                return false;\n              } else {\n                return false;\n              }\n            });\n          }\n\n          if ($.isFunction(found)) {\n            response = found.apply(context, passedArguments);\n          } else if (found !== undefined) {\n            response = found;\n          }\n\n          if ($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          } else if (returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          } else if (response !== undefined) {\n            returnedValue = response;\n          }\n\n          return found;\n        }\n      };\n\n      if (methodInvoked) {\n        if (instance === undefined) {\n          module.initialize();\n        }\n\n        module.invoke(query);\n      } else {\n        if (instance !== undefined) {\n          instance.invoke('destroy');\n        }\n\n        module.initialize();\n      }\n    });\n    return returnedValue !== undefined ? returnedValue : this;\n  };\n\n  $.fn.rating.settings = {\n    name: 'Rating',\n    namespace: 'rating',\n    slent: false,\n    debug: false,\n    verbose: false,\n    performance: true,\n    initialRating: 0,\n    interactive: true,\n    maxRating: 4,\n    clearable: 'auto',\n    fireOnInit: false,\n    onRate: function (rating) {},\n    error: {\n      method: 'The method you called is not defined',\n      noMaximum: 'No maximum rating specified. Cannot generate HTML automatically'\n    },\n    metadata: {\n      rating: 'rating',\n      maxRating: 'maxRating'\n    },\n    className: {\n      active: 'active',\n      disabled: 'disabled',\n      selected: 'selected',\n      loading: 'loading'\n    },\n    selector: {\n      icon: '.icon'\n    },\n    templates: {\n      icon: function (maxRating) {\n        var icon = 1,\n            html = '';\n\n        while (icon <= maxRating) {\n          html += '<i class=\"icon\"></i>';\n          icon++;\n        }\n\n        return html;\n      }\n    }\n  };\n})(jQuery, window, document);","map":{"version":3,"sources":["semantic/src/definitions/modules/rating.js"],"names":["$","window","document","undefined","Math","self","Function","fn","rating","parameters","$allModules","moduleSelector","selector","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","returnedValue","each","settings","isPlainObject","extend","namespace","className","metadata","error","eventNamespace","moduleNamespace","element","instance","data","$module","$icon","find","icon","initialLoad","module","initialize","verbose","length","setup","layout","interactive","enable","disable","set","get","initialRating","remove","instantiate","destroy","events","removeData","refresh","maxRating","html","templates","debug","event","mouseenter","$activeIcon","nextAll","removeClass","selected","addClass","prevAll","mouseleave","click","currentRating","index","canClear","clearable","clearRating","bind","on","off","disabled","is","filter","active","ratingIndex","eq","addBack","onRate","setting","name","value","internal","silent","log","prototype","console","info","apply","message","currentTime","executionTime","previousTime","push","clearTimeout","timer","setTimeout","display","title","totalTime","group","table","groupCollapsed","groupEnd","invoke","passedArguments","context","object","maxDepth","found","response","split","depth","camelCaseValue","charAt","toUpperCase","isFunction","isArray","slent","fireOnInit","method","noMaximum","loading","jQuery"],"mappings":"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","sourcesContent":["/*!\n * # Semantic UI - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n'use strict';\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        initialLoad,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n          module.set.initialLoad();\n          module.set.rating( module.get.initialRating() );\n          module.remove.initialLoad();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $icon   = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function() {\n            var\n              maxRating = module.get.maxRating(),\n              html      = $.fn.rating.settings.templates.icon(maxRating)\n            ;\n            module.debug('Generating icon html dynamically');\n            $module\n              .html(html)\n            ;\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.selected)\n            ;\n            $module\n              .addClass(className.selected)\n            ;\n            $activeIcon\n              .addClass(className.selected)\n                .prevAll()\n                .addClass(className.selected)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.get.rating(),\n              rating        = $icon.index($activeIcon) + 1,\n              canClear      = (settings.clearable == 'auto')\n               ? ($icon.length === 1)\n               : settings.clearable\n            ;\n            if(canClear && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.set.rating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events');\n            $module\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\n            ;\n          }\n        },\n\n        remove: {\n          events: function() {\n            module.verbose('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          }\n        },\n\n        get: {\n          initialRating: function() {\n            if($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function() {\n            if($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function() {\n            var\n              currentRating = $icon.filter('.' + className.active).length\n            ;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function(rating) {\n            var\n              ratingIndex = (rating - 1 >= 0)\n                ? (rating - 1)\n                : 0,\n              $activeIcon = $icon.eq(ratingIndex)\n            ;\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n              .removeClass(className.active)\n            ;\n            if(rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon\n                .prevAll()\n                .addBack()\n                  .addClass(className.active)\n              ;\n            }\n            if(!module.is.initialLoad()) {\n              settings.onRate.call(element, rating);\n            }\n          },\n          initialLoad: function() {\n            initialLoad = true;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  slent         : false,\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  maxRating     : 4,\n  clearable     : 'auto',\n\n  fireOnInit    : false,\n\n  onRate        : function(rating){},\n\n  error         : {\n    method    : 'The method you called is not defined',\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n  },\n\n\n  metadata: {\n    rating    : 'rating',\n    maxRating : 'maxRating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    selected : 'selected',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  },\n\n  templates: {\n    icon: function(maxRating) {\n      var\n        icon = 1,\n        html = ''\n      ;\n      while(icon <= maxRating) {\n        html += '<i class=\"icon\"></i>';\n        icon++;\n      }\n      return html;\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n"]},"sourceType":"script","hash":"32b9714ede4dcce7d0f8106bb5e3a2f7563aa5d1"}
