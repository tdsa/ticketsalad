{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/project/install.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/config/project/install.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/project/install.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","presets":[],"generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/project/install.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/config/project/install.js"}},"code":"/*******************************\n            Set-up\n*******************************/\nvar fs = require('fs'),\n    path = require('path'),\n    defaults = require('../defaults'),\n    release = require('./release'),\n    requireDotFile = require('require-dot-file');\n/*******************************\n          When to Ask\n*******************************/\n\n/* Preconditions for install questions */\n\n\nvar when = {\n  // path\n  changeRoot: function (questions) {\n    return questions.useRoot !== undefined && questions.useRoot !== true;\n  },\n  // permissions\n  changePermissions: function (questions) {\n    return questions.changePermissions && questions.changePermissions === true;\n  },\n  // install\n  hasConfig: function () {\n    return requireDotFile('semantic.json', process.cwd());\n  },\n  allowOverwrite: function (questions) {\n    return questions.overwrite === undefined || questions.overwrite == 'yes';\n  },\n  notAuto: function (questions) {\n    return questions.install !== 'auto' && (questions.overwrite === undefined || questions.overwrite == 'yes');\n  },\n  custom: function (questions) {\n    return questions.install === 'custom' && (questions.overwrite === undefined || questions.overwrite == 'yes');\n  },\n  express: function (questions) {\n    return questions.install === 'express' && (questions.overwrite === undefined || questions.overwrite == 'yes');\n  },\n  // customize\n  customize: function (questions) {\n    return questions.customize === true;\n  },\n  primaryColor: function (questions) {\n    return questions.primaryColor;\n  },\n  secondaryColor: function (questions) {\n    return questions.secondaryColor;\n  }\n};\n/*******************************\n        Response Filters\n*******************************/\n\n/* Filters to user input from install questions */\n\nvar filter = {\n  removeTrailingSlash: function (path) {\n    return path.replace(/(\\/$|\\\\$)+/mg, '');\n  }\n};\n/*******************************\n          Configuration\n*******************************/\n\nmodule.exports = {\n  // check whether install is setup\n  isSetup: function () {\n    return when.hasConfig();\n  },\n  // detect whether there is a semantic.json configuration and that the auto-install option is set to true\n  shouldAutoInstall: function () {\n    var config = when.hasConfig();\n    return config['autoInstall'];\n  },\n  // checks if files are in a PM directory\n  getPackageManager: function (directory) {\n    var // returns last matching result (avoid sub-module detection)\n    walk = function (directory) {\n      var pathArray = directory.split(path.sep),\n          folder = pathArray[pathArray.length - 1],\n          nextDirectory = path.join(directory, path.sep, '..');\n\n      if (folder == 'bower_components') {\n        return {\n          name: 'Bower',\n          root: nextDirectory\n        };\n      } else if (folder == 'node_modules') {\n        return {\n          name: 'NPM',\n          root: nextDirectory\n        };\n      } else if (folder == 'composer') {\n        return {\n          name: 'Composer',\n          root: nextDirectory\n        };\n      }\n\n      if (path.resolve(directory) == path.resolve(nextDirectory)) {\n        return false;\n      } // recurse downward\n\n\n      return walk(nextDirectory);\n    }; // start walk from current directory if none specified\n\n\n    directory = directory || __dirname + path.sep;\n    return walk(directory);\n  },\n  // checks if files is PMed submodule\n  isSubModule: function (directory) {\n    var moduleFolders = 0,\n        walk = function (directory) {\n      var pathArray = directory.split(path.sep),\n          folder = pathArray[pathArray.length - 2],\n          nextDirectory = path.join(directory, path.sep, '..');\n\n      if (folder == 'bower_components') {\n        moduleFolders++;\n      } else if (folder == 'node_modules') {\n        moduleFolders++;\n      } else if (folder == 'composer') {\n        moduleFolders++;\n      }\n\n      if (path.resolve(directory) == path.resolve(nextDirectory)) {\n        return moduleFolders > 1;\n      } // recurse downward\n\n\n      return walk(nextDirectory);\n    }; // start walk from current directory if none specified\n\n\n    directory = directory || __dirname + path.sep;\n    return walk(directory);\n  },\n  createJSON: function (answers) {\n    var json = {\n      paths: {\n        source: {},\n        output: {}\n      }\n    }; // add components\n\n    if (answers.components) {\n      json.components = answers.components;\n    } // add rtl choice\n\n\n    if (answers.rtl) {\n      json.rtl = answers.rtl;\n    } // add permissions\n\n\n    if (answers.permission) {\n      json.permission = answers.permission;\n    } // add path to semantic\n\n\n    if (answers.semanticRoot) {\n      json.base = path.normalize(answers.semanticRoot);\n    } // record version number to avoid re-installing on same version\n\n\n    json.version = release.version; // add dist folder paths\n\n    if (answers.dist) {\n      answers.dist = path.normalize(answers.dist);\n      json.paths.output = {\n        packaged: path.normalize(answers.dist + '/'),\n        uncompressed: path.normalize(answers.dist + '/components/'),\n        compressed: path.normalize(answers.dist + '/components/'),\n        themes: path.normalize(answers.dist + '/themes/')\n      };\n    } // add site path\n\n\n    if (answers.site) {\n      json.paths.source.site = path.normalize(answers.site + '/');\n    }\n\n    if (answers.packaged) {\n      json.paths.output.packaged = path.normalize(answers.packaged + '/');\n    }\n\n    if (answers.compressed) {\n      json.paths.output.compressed = path.normalize(answers.compressed + '/');\n    }\n\n    if (answers.uncompressed) {\n      json.paths.output.uncompressed = path.normalize(answers.uncompressed + '/');\n    }\n\n    return json;\n  },\n  // files cleaned up after install\n  setupFiles: ['./src/theme.config.example', './semantic.json.example', './src/_site'],\n  regExp: {\n    // used to match siteFolder variable in theme.less\n    siteVariable: /@siteFolder .*\\'(.*)/mg\n  },\n  // source paths (when installing)\n  source: {\n    config: './semantic.json.example',\n    definitions: './src/definitions',\n    gulpFile: './gulpfile.js',\n    lessImport: './src/semantic.less',\n    site: './src/_site',\n    tasks: './tasks',\n    themeConfig: './src/theme.config.example',\n    themeImport: './src/theme.less',\n    themes: './src/themes',\n    defaultTheme: './src/themes/default',\n    userGulpFile: './tasks/config/npm/gulpfile.js'\n  },\n  // expected final filenames\n  files: {\n    config: 'semantic.json',\n    lessImport: 'src/semantic.less',\n    site: 'src/site',\n    themeConfig: 'src/theme.config',\n    themeImport: 'src/theme.less'\n  },\n  // folder paths to files relative to root\n  folders: {\n    config: './',\n    definitions: 'src/definitions/',\n    lessImport: 'src/',\n    modules: 'node_modules/',\n    site: 'src/site/',\n    tasks: 'tasks/',\n    themeConfig: 'src/',\n    themeImport: 'src/',\n    themes: 'src/themes/',\n    defaultTheme: 'default/' // only path that is relative to another directory and not root\n\n  },\n  // questions asked during install\n  questions: {\n    root: [{\n      type: 'list',\n      name: 'useRoot',\n      message: '{packageMessage} Is this your project folder? {root}',\n      choices: [{\n        name: 'Yes',\n        value: true\n      }, {\n        name: 'No, let me specify',\n        value: false\n      }]\n    }, {\n      type: 'input',\n      name: 'customRoot',\n      message: 'Please enter the absolute path to your project root',\n      default: '/my/project/path',\n      when: when.changeRoot\n    }, {\n      type: 'input',\n      name: 'semanticRoot',\n      message: 'Where should we put Semantic UI inside your project?',\n      default: 'semantic/'\n    }],\n    setup: [{\n      type: 'list',\n      name: 'overwrite',\n      message: 'It looks like you have a semantic.json file already.',\n      when: when.hasConfig,\n      choices: [{\n        name: 'Yes, extend my current settings.',\n        value: 'yes'\n      }, {\n        name: 'Skip install',\n        value: 'no'\n      }]\n    }, {\n      type: 'list',\n      name: 'install',\n      message: 'Set-up Semantic UI',\n      when: when.allowOverwrite,\n      choices: [{\n        name: 'Automatic (Use default locations and all components)',\n        value: 'auto'\n      }, {\n        name: 'Express (Set components and output folder)',\n        value: 'express'\n      }, {\n        name: 'Custom (Customize all src/dist values)',\n        value: 'custom'\n      }]\n    }, {\n      type: 'checkbox',\n      name: 'components',\n      message: 'What components should we include in the package?',\n      // duplicated manually from tasks/defaults.js with additional property\n      choices: [{\n        name: \"reset\",\n        checked: true\n      }, {\n        name: \"site\",\n        checked: true\n      }, {\n        name: \"button\",\n        checked: true\n      }, {\n        name: \"container\",\n        checked: true\n      }, {\n        name: \"divider\",\n        checked: true\n      }, {\n        name: \"flag\",\n        checked: true\n      }, {\n        name: \"header\",\n        checked: true\n      }, {\n        name: \"icon\",\n        checked: true\n      }, {\n        name: \"image\",\n        checked: true\n      }, {\n        name: \"input\",\n        checked: true\n      }, {\n        name: \"label\",\n        checked: true\n      }, {\n        name: \"list\",\n        checked: true\n      }, {\n        name: \"loader\",\n        checked: true\n      }, {\n        name: \"rail\",\n        checked: true\n      }, {\n        name: \"reveal\",\n        checked: true\n      }, {\n        name: \"segment\",\n        checked: true\n      }, {\n        name: \"step\",\n        checked: true\n      }, {\n        name: \"breadcrumb\",\n        checked: true\n      }, {\n        name: \"form\",\n        checked: true\n      }, {\n        name: \"grid\",\n        checked: true\n      }, {\n        name: \"menu\",\n        checked: true\n      }, {\n        name: \"message\",\n        checked: true\n      }, {\n        name: \"table\",\n        checked: true\n      }, {\n        name: \"ad\",\n        checked: true\n      }, {\n        name: \"card\",\n        checked: true\n      }, {\n        name: \"comment\",\n        checked: true\n      }, {\n        name: \"feed\",\n        checked: true\n      }, {\n        name: \"item\",\n        checked: true\n      }, {\n        name: \"statistic\",\n        checked: true\n      }, {\n        name: \"accordion\",\n        checked: true\n      }, {\n        name: \"checkbox\",\n        checked: true\n      }, {\n        name: \"dimmer\",\n        checked: true\n      }, {\n        name: \"dropdown\",\n        checked: true\n      }, {\n        name: \"embed\",\n        checked: true\n      }, {\n        name: \"modal\",\n        checked: true\n      }, {\n        name: \"nag\",\n        checked: true\n      }, {\n        name: \"popup\",\n        checked: true\n      }, {\n        name: \"progress\",\n        checked: true\n      }, {\n        name: \"rating\",\n        checked: true\n      }, {\n        name: \"search\",\n        checked: true\n      }, {\n        name: \"shape\",\n        checked: true\n      }, {\n        name: \"sidebar\",\n        checked: true\n      }, {\n        name: \"sticky\",\n        checked: true\n      }, {\n        name: \"tab\",\n        checked: true\n      }, {\n        name: \"transition\",\n        checked: true\n      }, {\n        name: \"api\",\n        checked: true\n      }, {\n        name: \"form\",\n        checked: true\n      }, {\n        name: \"state\",\n        checked: true\n      }, {\n        name: \"visibility\",\n        checked: true\n      }],\n      when: when.notAuto\n    }, {\n      type: 'list',\n      name: 'changePermissions',\n      when: when.notAuto,\n      message: 'Should we set permissions on outputted files?',\n      choices: [{\n        name: 'No',\n        value: false\n      }, {\n        name: 'Yes',\n        value: true\n      }]\n    }, {\n      type: 'input',\n      name: 'permission',\n      message: 'What octal file permission should outputted files receive?',\n      default: defaults.permission,\n      when: when.changePermissions\n    }, {\n      type: 'list',\n      name: 'rtl',\n      message: 'Do you use a RTL (Right-To-Left) language?',\n      when: when.notAuto,\n      choices: [{\n        name: 'No',\n        value: false\n      }, {\n        name: 'Yes',\n        value: true\n      }, {\n        name: 'Build Both',\n        value: 'both'\n      }]\n    }, {\n      type: 'input',\n      name: 'dist',\n      message: 'Where should we output Semantic UI?',\n      default: defaults.paths.output.packaged,\n      filter: filter.removeTrailingSlash,\n      when: when.express\n    }, {\n      type: 'input',\n      name: 'site',\n      message: 'Where should we put your site folder?',\n      default: defaults.paths.source.site,\n      filter: filter.removeTrailingSlash,\n      when: when.custom\n    }, {\n      type: 'input',\n      name: 'packaged',\n      message: 'Where should we output a packaged version?',\n      default: defaults.paths.output.packaged,\n      filter: filter.removeTrailingSlash,\n      when: when.custom\n    }, {\n      type: 'input',\n      name: 'compressed',\n      message: 'Where should we output compressed components?',\n      default: defaults.paths.output.compressed,\n      filter: filter.removeTrailingSlash,\n      when: when.custom\n    }, {\n      type: 'input',\n      name: 'uncompressed',\n      message: 'Where should we output uncompressed components?',\n      default: defaults.paths.output.uncompressed,\n      filter: filter.removeTrailingSlash,\n      when: when.custom\n    }],\n    cleanup: [{\n      type: 'list',\n      name: 'cleanup',\n      message: 'Should we remove set-up files?',\n      choices: [{\n        name: 'Yes (re-install will require redownloading semantic).',\n        value: 'yes'\n      }, {\n        name: 'No Thanks',\n        value: 'no'\n      }]\n    }, {\n      type: 'list',\n      name: 'build',\n      message: 'Do you want to build Semantic now?',\n      choices: [{\n        name: 'Yes',\n        value: 'yes'\n      }, {\n        name: 'No',\n        value: 'no'\n      }]\n    }],\n    site: [{\n      type: 'list',\n      name: 'customize',\n      message: 'You have not yet customized your site, can we help you do that?',\n      choices: [{\n        name: 'Yes, ask me a few questions',\n        value: true\n      }, {\n        name: 'No I\\'ll do it myself',\n        value: false\n      }]\n    }, {\n      type: 'list',\n      name: 'headerFont',\n      message: 'Select your header font',\n      choices: [{\n        name: 'Helvetica Neue, Arial, sans-serif',\n        value: 'Helvetica Neue, Arial, sans-serif;'\n      }, {\n        name: 'Lato (Google Fonts)',\n        value: 'Lato'\n      }, {\n        name: 'Open Sans (Google Fonts)',\n        value: 'Open Sans'\n      }, {\n        name: 'Source Sans Pro (Google Fonts)',\n        value: 'Source Sans Pro'\n      }, {\n        name: 'Droid (Google Fonts)',\n        value: 'Droid'\n      }, {\n        name: 'I\\'ll choose on my own',\n        value: false\n      }],\n      when: when.customize\n    }, {\n      type: 'list',\n      name: 'pageFont',\n      message: 'Select your page font',\n      choices: [{\n        name: 'Helvetica Neue, Arial, sans-serif',\n        value: 'Helvetica Neue, Arial, sans-serif;'\n      }, {\n        name: 'Lato (Import from Google Fonts)',\n        value: 'Lato'\n      }, {\n        name: 'Open Sans (Import from Google Fonts)',\n        value: 'Open Sans'\n      }, {\n        name: 'Source Sans Pro (Import from Google Fonts)',\n        value: 'Source Sans Pro'\n      }, {\n        name: 'Droid (Google Fonts)',\n        value: 'Droid'\n      }, {\n        name: 'I\\'ll choose on my own',\n        value: false\n      }],\n      when: when.customize\n    }, {\n      type: 'list',\n      name: 'fontSize',\n      message: 'Select your base font size',\n      default: '14px',\n      choices: [{\n        name: '12px'\n      }, {\n        name: '13px'\n      }, {\n        name: '14px (Recommended)',\n        value: '14px'\n      }, {\n        name: '15px'\n      }, {\n        name: '16px'\n      }, {\n        name: 'I\\'ll choose on my own',\n        value: false\n      }],\n      when: when.customize\n    }, {\n      type: 'list',\n      name: 'primaryColor',\n      message: 'Select the closest name for your primary brand color',\n      default: '14px',\n      choices: [{\n        name: 'Blue'\n      }, {\n        name: 'Green'\n      }, {\n        name: 'Orange'\n      }, {\n        name: 'Pink'\n      }, {\n        name: 'Purple'\n      }, {\n        name: 'Red'\n      }, {\n        name: 'Teal'\n      }, {\n        name: 'Yellow'\n      }, {\n        name: 'Black'\n      }, {\n        name: 'I\\'ll choose on my own',\n        value: false\n      }],\n      when: when.customize\n    }, {\n      type: 'input',\n      name: 'PrimaryHex',\n      message: 'Enter a hexcode for your primary brand color',\n      when: when.primaryColor\n    }, {\n      type: 'list',\n      name: 'secondaryColor',\n      message: 'Select the closest name for your secondary brand color',\n      default: '14px',\n      choices: [{\n        name: 'Blue'\n      }, {\n        name: 'Green'\n      }, {\n        name: 'Orange'\n      }, {\n        name: 'Pink'\n      }, {\n        name: 'Purple'\n      }, {\n        name: 'Red'\n      }, {\n        name: 'Teal'\n      }, {\n        name: 'Yellow'\n      }, {\n        name: 'Black'\n      }, {\n        name: 'I\\'ll choose on my own',\n        value: false\n      }],\n      when: when.customize\n    }, {\n      type: 'input',\n      name: 'secondaryHex',\n      message: 'Enter a hexcode for your secondary brand color',\n      when: when.secondaryColor\n    }]\n  },\n  settings: {\n    /* Rename Files */\n    rename: {\n      json: {\n        extname: '.json'\n      }\n    },\n\n    /* Copy Install Folders */\n    wrench: {\n      // overwrite existing files update & install (default theme / definition)\n      overwrite: {\n        forceDelete: true,\n        excludeHiddenUnix: true,\n        preserveFiles: false\n      },\n      // only create files that don't exist (site theme update)\n      merge: {\n        forceDelete: false,\n        excludeHiddenUnix: true,\n        preserveFiles: true\n      }\n    }\n  }\n};","map":{"version":3,"sources":["semantic/tasks/config/project/install.js"],"names":["fs","require","path","defaults","release","requireDotFile","when","changeRoot","questions","useRoot","undefined","changePermissions","hasConfig","process","cwd","allowOverwrite","overwrite","notAuto","install","custom","express","customize","primaryColor","secondaryColor","filter","removeTrailingSlash","replace","module","exports","isSetup","shouldAutoInstall","config","getPackageManager","directory","walk","pathArray","split","sep","folder","length","nextDirectory","join","name","root","resolve","__dirname","isSubModule","moduleFolders","createJSON","answers","json","paths","source","output","components","rtl","permission","semanticRoot","base","normalize","version","dist","packaged","uncompressed","compressed","themes","site","setupFiles","regExp","siteVariable","definitions","gulpFile","lessImport","tasks","themeConfig","themeImport","defaultTheme","userGulpFile","files","folders","modules","type","message","choices","value","default","setup","checked","cleanup","settings","rename","extname","wrench","forceDelete","excludeHiddenUnix","preserveFiles","merge"],"mappings":"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","sourcesContent":["/*******************************\n            Set-up\n*******************************/\n\nvar\n  fs             = require('fs'),\n  path           = require('path'),\n  defaults       = require('../defaults'),\n  release        = require('./release'),\n\n  requireDotFile = require('require-dot-file')\n;\n\n/*******************************\n          When to Ask\n*******************************/\n\n/* Preconditions for install questions */\n\nvar when = {\n\n  // path\n  changeRoot: function(questions) {\n    return (questions.useRoot !== undefined && questions.useRoot !== true);\n  },\n\n  // permissions\n  changePermissions: function(questions) {\n    return (questions.changePermissions && questions.changePermissions === true);\n  },\n\n  // install\n  hasConfig: function() {\n    return requireDotFile('semantic.json', process.cwd());\n  },\n\n  allowOverwrite: function(questions) {\n    return (questions.overwrite === undefined || questions.overwrite == 'yes');\n  },\n  notAuto: function(questions) {\n    return (questions.install !== 'auto' && (questions.overwrite === undefined || questions.overwrite == 'yes'));\n  },\n  custom: function(questions) {\n    return (questions.install === 'custom' && (questions.overwrite === undefined || questions.overwrite == 'yes'));\n  },\n  express: function(questions) {\n    return (questions.install === 'express' && (questions.overwrite === undefined || questions.overwrite == 'yes'));\n  },\n\n  // customize\n  customize: function(questions) {\n    return (questions.customize === true);\n  },\n  primaryColor: function(questions) {\n    return (questions.primaryColor);\n  },\n  secondaryColor: function(questions) {\n    return (questions.secondaryColor);\n  }\n};\n\n/*******************************\n        Response Filters\n*******************************/\n\n/* Filters to user input from install questions */\n\nvar filter = {\n  removeTrailingSlash: function(path) {\n    return path.replace(/(\\/$|\\\\$)+/mg, '');\n  }\n};\n\n/*******************************\n          Configuration\n*******************************/\n\nmodule.exports = {\n\n  // check whether install is setup\n  isSetup: function() {\n    return when.hasConfig();\n  },\n\n  // detect whether there is a semantic.json configuration and that the auto-install option is set to true\n  shouldAutoInstall: function() {\n    var\n      config = when.hasConfig()\n    ;\n    return config['autoInstall'];\n  },\n\n  // checks if files are in a PM directory\n  getPackageManager: function(directory) {\n    var\n      // returns last matching result (avoid sub-module detection)\n      walk = function(directory) {\n        var\n          pathArray     = directory.split(path.sep),\n          folder        = pathArray[pathArray.length - 1],\n          nextDirectory = path.join(directory, path.sep, '..')\n        ;\n        if( folder == 'bower_components') {\n          return {\n            name: 'Bower',\n            root: nextDirectory\n          };\n        }\n        else if(folder == 'node_modules') {\n         return {\n            name: 'NPM',\n            root: nextDirectory\n          };\n        }\n        else if(folder == 'composer') {\n         return {\n            name: 'Composer',\n            root: nextDirectory\n          };\n        }\n        if(path.resolve(directory) == path.resolve(nextDirectory)) {\n          return false;\n        }\n        // recurse downward\n        return walk(nextDirectory);\n      }\n    ;\n    // start walk from current directory if none specified\n    directory = directory || (__dirname + path.sep);\n    return walk(directory);\n  },\n\n  // checks if files is PMed submodule\n  isSubModule: function(directory) {\n    var\n      moduleFolders = 0,\n      walk = function(directory) {\n        var\n          pathArray     = directory.split(path.sep),\n          folder        = pathArray[pathArray.length - 2],\n          nextDirectory = path.join(directory, path.sep, '..')\n        ;\n        if( folder == 'bower_components') {\n          moduleFolders++;\n        }\n        else if(folder == 'node_modules') {\n          moduleFolders++;\n        }\n        else if(folder == 'composer') {\n          moduleFolders++;\n        }\n        if(path.resolve(directory) == path.resolve(nextDirectory)) {\n          return (moduleFolders > 1);\n        }\n        // recurse downward\n        return walk(nextDirectory);\n      }\n    ;\n    // start walk from current directory if none specified\n    directory = directory || (__dirname + path.sep);\n    return walk(directory);\n  },\n\n\n  createJSON: function(answers) {\n    var\n      json = {\n        paths: {\n          source: {},\n          output: {}\n        }\n      }\n    ;\n\n    // add components\n    if(answers.components) {\n      json.components = answers.components;\n    }\n\n    // add rtl choice\n    if(answers.rtl) {\n      json.rtl = answers.rtl;\n    }\n\n    // add permissions\n    if(answers.permission) {\n      json.permission = answers.permission;\n    }\n\n    // add path to semantic\n    if(answers.semanticRoot) {\n      json.base = path.normalize(answers.semanticRoot);\n    }\n\n    // record version number to avoid re-installing on same version\n    json.version = release.version;\n\n    // add dist folder paths\n    if(answers.dist) {\n      answers.dist = path.normalize(answers.dist);\n\n      json.paths.output = {\n        packaged     : path.normalize(answers.dist + '/'),\n        uncompressed : path.normalize(answers.dist + '/components/'),\n        compressed   : path.normalize(answers.dist + '/components/'),\n        themes       : path.normalize(answers.dist + '/themes/')\n      };\n    }\n\n    // add site path\n    if(answers.site) {\n      json.paths.source.site = path.normalize(answers.site + '/');\n    }\n    if(answers.packaged) {\n      json.paths.output.packaged = path.normalize(answers.packaged + '/');\n    }\n    if(answers.compressed) {\n      json.paths.output.compressed = path.normalize(answers.compressed + '/');\n    }\n    if(answers.uncompressed) {\n      json.paths.output.uncompressed = path.normalize(answers.uncompressed + '/');\n    }\n    return json;\n  },\n\n  // files cleaned up after install\n  setupFiles: [\n    './src/theme.config.example',\n    './semantic.json.example',\n    './src/_site'\n  ],\n\n  regExp: {\n    // used to match siteFolder variable in theme.less\n    siteVariable: /@siteFolder .*\\'(.*)/mg\n  },\n\n  // source paths (when installing)\n  source: {\n    config       : './semantic.json.example',\n    definitions  : './src/definitions',\n    gulpFile     : './gulpfile.js',\n    lessImport   : './src/semantic.less',\n    site         : './src/_site',\n    tasks        : './tasks',\n    themeConfig  : './src/theme.config.example',\n    themeImport  : './src/theme.less',\n    themes       : './src/themes',\n    defaultTheme : './src/themes/default',\n    userGulpFile : './tasks/config/npm/gulpfile.js'\n  },\n\n  // expected final filenames\n  files: {\n    config      : 'semantic.json',\n    lessImport  : 'src/semantic.less',\n    site        : 'src/site',\n    themeConfig : 'src/theme.config',\n    themeImport : 'src/theme.less'\n  },\n\n  // folder paths to files relative to root\n  folders: {\n    config       : './',\n    definitions  : 'src/definitions/',\n    lessImport   : 'src/',\n    modules      : 'node_modules/',\n    site         : 'src/site/',\n    tasks        : 'tasks/',\n    themeConfig  : 'src/',\n    themeImport  : 'src/',\n    themes       : 'src/themes/',\n\n    defaultTheme : 'default/' // only path that is relative to another directory and not root\n  },\n\n  // questions asked during install\n  questions: {\n\n    root: [\n      {\n        type    : 'list',\n        name    : 'useRoot',\n        message :\n          '{packageMessage} Is this your project folder? {root}',\n        choices: [\n          {\n            name  : 'Yes',\n            value : true\n          },\n          {\n            name  : 'No, let me specify',\n            value : false\n          }\n        ]\n      },\n      {\n        type    : 'input',\n        name    : 'customRoot',\n        message : 'Please enter the absolute path to your project root',\n        default : '/my/project/path',\n        when    : when.changeRoot\n      },\n      {\n        type    : 'input',\n        name    : 'semanticRoot',\n        message : 'Where should we put Semantic UI inside your project?',\n        default : 'semantic/'\n      }\n    ],\n\n    setup: [\n      {\n        type: 'list',\n        name: 'overwrite',\n        message: 'It looks like you have a semantic.json file already.',\n        when: when.hasConfig,\n        choices: [\n          {\n            name: 'Yes, extend my current settings.',\n            value: 'yes'\n          },\n          {\n            name: 'Skip install',\n            value: 'no'\n          }\n        ]\n      },\n      {\n        type: 'list',\n        name: 'install',\n        message: 'Set-up Semantic UI',\n        when: when.allowOverwrite,\n        choices: [\n          {\n            name: 'Automatic (Use default locations and all components)',\n            value: 'auto'\n          },\n          {\n            name: 'Express (Set components and output folder)',\n            value: 'express'\n          },\n          {\n            name: 'Custom (Customize all src/dist values)',\n            value: 'custom'\n          }\n        ]\n      },\n      {\n        type: 'checkbox',\n        name: 'components',\n        message: 'What components should we include in the package?',\n\n        // duplicated manually from tasks/defaults.js with additional property\n        choices: [\n          { name: \"reset\", checked: true },\n          { name: \"site\", checked: true },\n          { name: \"button\", checked: true },\n          { name: \"container\", checked: true },\n          { name: \"divider\", checked: true },\n          { name: \"flag\", checked: true },\n          { name: \"header\", checked: true },\n          { name: \"icon\", checked: true },\n          { name: \"image\", checked: true },\n          { name: \"input\", checked: true },\n          { name: \"label\", checked: true },\n          { name: \"list\", checked: true },\n          { name: \"loader\", checked: true },\n          { name: \"rail\", checked: true },\n          { name: \"reveal\", checked: true },\n          { name: \"segment\", checked: true },\n          { name: \"step\", checked: true },\n          { name: \"breadcrumb\", checked: true },\n          { name: \"form\", checked: true },\n          { name: \"grid\", checked: true },\n          { name: \"menu\", checked: true },\n          { name: \"message\", checked: true },\n          { name: \"table\", checked: true },\n          { name: \"ad\", checked: true },\n          { name: \"card\", checked: true },\n          { name: \"comment\", checked: true },\n          { name: \"feed\", checked: true },\n          { name: \"item\", checked: true },\n          { name: \"statistic\", checked: true },\n          { name: \"accordion\", checked: true },\n          { name: \"checkbox\", checked: true },\n          { name: \"dimmer\", checked: true },\n          { name: \"dropdown\", checked: true },\n          { name: \"embed\", checked: true },\n          { name: \"modal\", checked: true },\n          { name: \"nag\", checked: true },\n          { name: \"popup\", checked: true },\n          { name: \"progress\", checked: true },\n          { name: \"rating\", checked: true },\n          { name: \"search\", checked: true },\n          { name: \"shape\", checked: true },\n          { name: \"sidebar\", checked: true },\n          { name: \"sticky\", checked: true },\n          { name: \"tab\", checked: true },\n          { name: \"transition\", checked: true },\n          { name: \"api\", checked: true },\n          { name: \"form\", checked: true },\n          { name: \"state\", checked: true },\n          { name: \"visibility\", checked: true }\n        ],\n        when: when.notAuto\n      },\n      {\n        type: 'list',\n        name: 'changePermissions',\n        when: when.notAuto,\n        message: 'Should we set permissions on outputted files?',\n        choices: [\n          {\n            name: 'No',\n            value: false\n          },\n          {\n            name: 'Yes',\n            value: true\n          }\n        ]\n      },\n      {\n        type: 'input',\n        name: 'permission',\n        message: 'What octal file permission should outputted files receive?',\n        default: defaults.permission,\n        when: when.changePermissions\n      },\n      {\n        type: 'list',\n        name: 'rtl',\n        message: 'Do you use a RTL (Right-To-Left) language?',\n        when: when.notAuto,\n        choices: [\n          {\n            name: 'No',\n            value: false\n          },\n          {\n            name: 'Yes',\n            value: true\n          },\n          {\n            name: 'Build Both',\n            value: 'both'\n          }\n        ]\n      },\n      {\n        type: 'input',\n        name: 'dist',\n        message: 'Where should we output Semantic UI?',\n        default: defaults.paths.output.packaged,\n        filter: filter.removeTrailingSlash,\n        when: when.express\n      },\n      {\n        type: 'input',\n        name: 'site',\n        message: 'Where should we put your site folder?',\n        default: defaults.paths.source.site,\n        filter: filter.removeTrailingSlash,\n        when: when.custom\n      },\n      {\n        type: 'input',\n        name: 'packaged',\n        message: 'Where should we output a packaged version?',\n        default: defaults.paths.output.packaged,\n        filter: filter.removeTrailingSlash,\n        when: when.custom\n      },\n      {\n        type: 'input',\n        name: 'compressed',\n        message: 'Where should we output compressed components?',\n        default: defaults.paths.output.compressed,\n        filter: filter.removeTrailingSlash,\n        when: when.custom\n      },\n      {\n        type: 'input',\n        name: 'uncompressed',\n        message: 'Where should we output uncompressed components?',\n        default: defaults.paths.output.uncompressed,\n        filter: filter.removeTrailingSlash,\n        when: when.custom\n      }\n    ],\n\n\n    cleanup: [\n      {\n        type: 'list',\n        name: 'cleanup',\n        message: 'Should we remove set-up files?',\n        choices: [\n          {\n            name: 'Yes (re-install will require redownloading semantic).',\n            value: 'yes'\n          },\n          {\n            name: 'No Thanks',\n            value: 'no'\n          }\n        ]\n      },\n      {\n        type: 'list',\n        name: 'build',\n        message: 'Do you want to build Semantic now?',\n        choices: [\n          {\n            name: 'Yes',\n            value: 'yes'\n          },\n          {\n            name: 'No',\n            value: 'no'\n          }\n        ]\n      },\n    ],\n    site: [\n      {\n        type: 'list',\n        name: 'customize',\n        message: 'You have not yet customized your site, can we help you do that?',\n        choices: [\n          {\n            name: 'Yes, ask me a few questions',\n            value: true\n          },\n          {\n            name: 'No I\\'ll do it myself',\n            value: false\n          }\n        ]\n      },\n      {\n        type: 'list',\n        name: 'headerFont',\n        message: 'Select your header font',\n        choices: [\n          {\n            name: 'Helvetica Neue, Arial, sans-serif',\n            value: 'Helvetica Neue, Arial, sans-serif;'\n          },\n          {\n            name: 'Lato (Google Fonts)',\n            value: 'Lato'\n          },\n          {\n            name: 'Open Sans (Google Fonts)',\n            value: 'Open Sans'\n          },\n          {\n            name: 'Source Sans Pro (Google Fonts)',\n            value: 'Source Sans Pro'\n          },\n          {\n            name: 'Droid (Google Fonts)',\n            value: 'Droid'\n          },\n          {\n            name: 'I\\'ll choose on my own',\n            value: false\n          }\n        ],\n        when: when.customize\n      },\n      {\n        type: 'list',\n        name: 'pageFont',\n        message: 'Select your page font',\n        choices: [\n          {\n            name: 'Helvetica Neue, Arial, sans-serif',\n            value: 'Helvetica Neue, Arial, sans-serif;'\n          },\n          {\n            name: 'Lato (Import from Google Fonts)',\n            value: 'Lato'\n          },\n          {\n            name: 'Open Sans (Import from Google Fonts)',\n            value: 'Open Sans'\n          },\n          {\n            name: 'Source Sans Pro (Import from Google Fonts)',\n            value: 'Source Sans Pro'\n          },\n          {\n            name: 'Droid (Google Fonts)',\n            value: 'Droid'\n          },\n          {\n            name: 'I\\'ll choose on my own',\n            value: false\n          }\n        ],\n        when: when.customize\n      },\n      {\n        type: 'list',\n        name: 'fontSize',\n        message: 'Select your base font size',\n        default: '14px',\n        choices: [\n          {\n            name: '12px',\n          },\n          {\n            name: '13px',\n          },\n          {\n            name: '14px (Recommended)',\n            value: '14px'\n          },\n          {\n            name: '15px',\n          },\n          {\n            name: '16px',\n          },\n          {\n            name: 'I\\'ll choose on my own',\n            value: false\n          }\n        ],\n        when: when.customize\n      },\n      {\n        type: 'list',\n        name: 'primaryColor',\n        message: 'Select the closest name for your primary brand color',\n        default: '14px',\n        choices: [\n          {\n            name: 'Blue'\n          },\n          {\n            name: 'Green'\n          },\n          {\n            name: 'Orange'\n          },\n          {\n            name: 'Pink'\n          },\n          {\n            name: 'Purple'\n          },\n          {\n            name: 'Red'\n          },\n          {\n            name: 'Teal'\n          },\n          {\n            name: 'Yellow'\n          },\n          {\n            name: 'Black'\n          },\n          {\n            name: 'I\\'ll choose on my own',\n            value: false\n          }\n        ],\n        when: when.customize\n      },\n      {\n        type: 'input',\n        name: 'PrimaryHex',\n        message: 'Enter a hexcode for your primary brand color',\n        when: when.primaryColor\n      },\n      {\n        type: 'list',\n        name: 'secondaryColor',\n        message: 'Select the closest name for your secondary brand color',\n        default: '14px',\n        choices: [\n          {\n            name: 'Blue'\n          },\n          {\n            name: 'Green'\n          },\n          {\n            name: 'Orange'\n          },\n          {\n            name: 'Pink'\n          },\n          {\n            name: 'Purple'\n          },\n          {\n            name: 'Red'\n          },\n          {\n            name: 'Teal'\n          },\n          {\n            name: 'Yellow'\n          },\n          {\n            name: 'Black'\n          },\n          {\n            name: 'I\\'ll choose on my own',\n            value: false\n          }\n        ],\n        when: when.customize\n      },\n      {\n        type: 'input',\n        name: 'secondaryHex',\n        message: 'Enter a hexcode for your secondary brand color',\n        when: when.secondaryColor\n      }\n    ]\n\n  },\n\n  settings: {\n\n    /* Rename Files */\n    rename: {\n      json : { extname : '.json' }\n    },\n\n    /* Copy Install Folders */\n    wrench: {\n\n      // overwrite existing files update & install (default theme / definition)\n      overwrite: {\n        forceDelete       : true,\n        excludeHiddenUnix : true,\n        preserveFiles     : false\n      },\n\n      // only create files that don't exist (site theme update)\n      merge: {\n        forceDelete       : false,\n        excludeHiddenUnix : true,\n        preserveFiles     : true\n      }\n\n    }\n  }\n};\n"]},"sourceType":"script","hash":"e75f240038eff90a3a67be70cad789c0a5b94fa1"}
