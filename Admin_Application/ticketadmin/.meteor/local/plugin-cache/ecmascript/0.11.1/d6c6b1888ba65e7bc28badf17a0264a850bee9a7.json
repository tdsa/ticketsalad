{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/tasks.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/config/tasks.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/tasks.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/tasks.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/config/tasks.js"}},"code":"var console = require('better-console'),\n    config = require('./user'),\n    release = require('./project/release');\n\nmodule.exports = {\n  banner: release.banner,\n  log: {\n    created: function (file) {\n      return 'Created: ' + file;\n    },\n    modified: function (file) {\n      return 'Modified: ' + file;\n    }\n  },\n  filenames: {\n    concatenatedCSS: 'semantic.css',\n    concatenatedJS: 'semantic.js',\n    concatenatedMinifiedCSS: 'semantic.min.css',\n    concatenatedMinifiedJS: 'semantic.min.js',\n    concatenatedRTLCSS: 'semantic.rtl.css',\n    concatenatedMinifiedRTLCSS: 'semantic.rtl.min.css'\n  },\n  regExp: {\n    comments: {\n      // remove all comments from config files (.variable)\n      variables: {\n        \"in\": /(\\/\\*[\\s\\S]+?\\*\\/+)[\\s\\S]+?\\/\\* End Config \\*\\//,\n        out: '$1'\n      },\n      // add version to first comment\n      license: {\n        \"in\": /(^\\/\\*[\\s\\S]+)(# Semantic UI )([\\s\\S]+?\\*\\/)/,\n        out: '$1$2' + release.version + ' $3'\n      },\n      // adds uniform spacing around comments\n      large: {\n        \"in\": /(\\/\\*\\*\\*\\*[\\s\\S]+?\\*\\/)/mg,\n        out: '\\n\\n$1\\n'\n      },\n      small: {\n        \"in\": /(\\/\\*---[\\s\\S]+?\\*\\/)/mg,\n        out: '\\n$1\\n'\n      },\n      tiny: {\n        \"in\": /(\\/\\* [\\s\\S]+? \\*\\/)/mg,\n        out: '\\n$1'\n      }\n    },\n    theme: /.*(\\/|\\\\)themes(\\/|\\\\).*?(?=(\\/|\\\\))/mg\n  },\n  settings: {\n    /* Remove Files in Clean */\n    del: {\n      silent: true\n    },\n    concatCSS: {\n      rebaseUrls: false\n    },\n\n    /* Comment Banners */\n    header: {\n      title: release.title,\n      version: release.version,\n      repository: release.repository,\n      url: release.url\n    },\n    plumber: {\n      less: {\n        errorHandler: function (error) {\n          var regExp = {\n            variable: /@(\\S.*?)\\s/,\n            theme: /themes[\\/\\\\]+(.*?)[\\/\\\\].*/,\n            element: /[\\/\\\\]([^\\/\\\\*]*)\\.overrides/\n          },\n              theme,\n              element;\n\n          if (error.filename.match(/theme.less/)) {\n            if (error.line == 5) {\n              element = regExp.variable.exec(error.message)[1];\n\n              if (element) {\n                console.error('Missing theme.config value for ', element);\n              }\n\n              console.error('Most likely new UI was added in an update. You will need to add missing elements from theme.config.example');\n            }\n\n            if (error.line == 46) {\n              element = regExp.element.exec(error.message)[1];\n              theme = regExp.theme.exec(error.message)[1];\n              console.error(theme + ' is not an available theme for ' + element);\n            }\n          } else {\n            console.log(error);\n          }\n\n          this.emit('end');\n        }\n      }\n    },\n\n    /* What Browsers to Prefix */\n    prefix: {\n      browsers: ['last 2 versions', '> 1%', 'opera 12.1', 'bb 10', 'android 4']\n    },\n\n    /* File Renames */\n    rename: {\n      minJS: {\n        extname: '.min.js'\n      },\n      minCSS: {\n        extname: '.min.css'\n      },\n      rtlCSS: {\n        extname: '.rtl.css'\n      },\n      rtlMinCSS: {\n        extname: '.rtl.min.css'\n      }\n    },\n\n    /* Minified CSS Concat */\n    minify: {\n      processImport: false,\n      restructuring: false,\n      keepSpecialComments: 1,\n      roundingPrecision: -1\n    },\n\n    /* Minified JS Settings */\n    uglify: {\n      mangle: true,\n      output: {\n        comments: 'some'\n      }\n    },\n\n    /* Minified Concat CSS Settings */\n    concatMinify: {\n      processImport: false,\n      restructuring: false,\n      keepSpecialComments: false,\n      roundingPrecision: -1\n    },\n\n    /* Minified Concat JS */\n    concatUglify: {\n      mangle: true,\n      output: {\n        comments: 'some'\n      }\n    }\n  }\n};","map":{"version":3,"sources":["semantic/tasks/config/tasks.js"],"names":["console","require","config","release","module","exports","banner","log","created","file","modified","filenames","concatenatedCSS","concatenatedJS","concatenatedMinifiedCSS","concatenatedMinifiedJS","concatenatedRTLCSS","concatenatedMinifiedRTLCSS","regExp","comments","variables","out","license","version","large","small","tiny","theme","settings","del","silent","concatCSS","rebaseUrls","header","title","repository","url","plumber","less","errorHandler","error","variable","element","filename","match","line","exec","message","emit","prefix","browsers","rename","minJS","extname","minCSS","rtlCSS","rtlMinCSS","minify","processImport","restructuring","keepSpecialComments","roundingPrecision","uglify","mangle","output","concatMinify","concatUglify"],"mappings":"AAAA,IACEA,UAAUC,QAAQ,gBAAR,CADZ;AAAA,IAEEC,SAAUD,QAAQ,QAAR,CAFZ;AAAA,IAGEE,UAAUF,QAAQ,mBAAR,CAHZ;;AAOAG,OAAOC,OAAP,GAAiB;AAEfC,UAASH,QAAQG,MAFF;AAIfC,OAAK;AACHC,aAAS,UAASC,IAAT,EAAe;AACtB,aAAO,cAAcA,IAArB;AACD,KAHE;AAIHC,cAAU,UAASD,IAAT,EAAe;AACvB,aAAO,eAAeA,IAAtB;AACD;AANE,GAJU;AAafE,aAAW;AACTC,qBAA6B,cADpB;AAETC,oBAA6B,aAFpB;AAGTC,6BAA6B,kBAHpB;AAITC,4BAA6B,iBAJpB;AAKTC,wBAA6B,kBALpB;AAMTC,gCAA6B;AANpB,GAbI;AAsBfC,UAAQ;AAENC,cAAU;AAER;AACAC,iBAAY;AACV,cAAM,iDADI;AAEVC,aAAM;AAFI,OAHJ;AAQR;AACAC,eAAS;AACP,cAAM,8CADC;AAEPD,aAAM,SAASlB,QAAQoB,OAAjB,GAA2B;AAF1B,OATD;AAcR;AACAC,aAAO;AACL,cAAM,4BADD;AAELH,aAAM;AAFD,OAfC;AAmBRI,aAAO;AACL,cAAM,yBADD;AAELJ,aAAM;AAFD,OAnBC;AAuBRK,YAAM;AACJ,cAAM,wBADF;AAEJL,aAAM;AAFF;AAvBE,KAFJ;AA+BNM,WAAO;AA/BD,GAtBO;AAyDfC,YAAU;AAER;AACAC,SAAK;AACHC,cAAS;AADN,KAHG;AAORC,eAAW;AACTC,kBAAY;AADH,KAPH;;AAWR;AACAC,YAAQ;AACNC,aAAa/B,QAAQ+B,KADf;AAENX,eAAapB,QAAQoB,OAFf;AAGNY,kBAAahC,QAAQgC,UAHf;AAINC,WAAajC,QAAQiC;AAJf,KAZA;AAmBRC,aAAS;AACPC,YAAM;AACJC,sBAAc,UAASC,KAAT,EAAgB;AAC5B,cACEtB,SAAS;AACPuB,sBAAW,YADJ;AAEPd,mBAAW,4BAFJ;AAGPe,qBAAW;AAHJ,WADX;AAAA,cAMEf,KANF;AAAA,cAOEe,OAPF;;AASA,cAAGF,MAAMG,QAAN,CAAeC,KAAf,CAAqB,YAArB,CAAH,EAAuC;AACrC,gBAAGJ,MAAMK,IAAN,IAAc,CAAjB,EAAoB;AAClBH,wBAAWxB,OAAOuB,QAAP,CAAgBK,IAAhB,CAAqBN,MAAMO,OAA3B,EAAoC,CAApC,CAAX;;AACA,kBAAGL,OAAH,EAAY;AACV1C,wBAAQwC,KAAR,CAAc,iCAAd,EAAiDE,OAAjD;AACD;;AACD1C,sBAAQwC,KAAR,CAAc,4GAAd;AACD;;AACD,gBAAGA,MAAMK,IAAN,IAAc,EAAjB,EAAqB;AACnBH,wBAAUxB,OAAOwB,OAAP,CAAeI,IAAf,CAAoBN,MAAMO,OAA1B,EAAmC,CAAnC,CAAV;AACApB,sBAAUT,OAAOS,KAAP,CAAamB,IAAb,CAAkBN,MAAMO,OAAxB,EAAiC,CAAjC,CAAV;AACA/C,sBAAQwC,KAAR,CAAcb,QAAQ,iCAAR,GAA4Ce,OAA1D;AACD;AACF,WAbD,MAcK;AACH1C,oBAAQO,GAAR,CAAYiC,KAAZ;AACD;;AACD,eAAKQ,IAAL,CAAU,KAAV;AACD;AA7BG;AADC,KAnBD;;AAqDR;AACAC,YAAQ;AACNC,gBAAU,CACR,iBADQ,EAER,MAFQ,EAGR,YAHQ,EAIR,OAJQ,EAKR,WALQ;AADJ,KAtDA;;AAgER;AACAC,YAAQ;AACNC,aAAY;AAAEC,iBAAU;AAAZ,OADN;AAENC,cAAY;AAAED,iBAAU;AAAZ,OAFN;AAGNE,cAAY;AAAEF,iBAAU;AAAZ,OAHN;AAING,iBAAY;AAAEH,iBAAU;AAAZ;AAJN,KAjEA;;AAwER;AACAI,YAAQ;AACNC,qBAAsB,KADhB;AAENC,qBAAsB,KAFhB;AAGNC,2BAAsB,CAHhB;AAINC,yBAAsB,CAAC;AAJjB,KAzEA;;AAgFR;AACAC,YAAQ;AACNC,cAAW,IADL;AAENC,cAAQ;AACN7C,kBAAU;AADJ;AAFF,KAjFA;;AAwFR;AACA8C,kBAAc;AACZP,qBAAsB,KADV;AAEZC,qBAAsB,KAFV;AAGZC,2BAAsB,KAHV;AAIZC,yBAAsB,CAAC;AAJX,KAzFN;;AAgGR;AACAK,kBAAc;AACZH,cAAW,IADC;AAEZC,cAAQ;AACN7C,kBAAU;AADJ;AAFI;AAjGN;AAzDK,CAAjB","sourcesContent":["var\n  console = require('better-console'),\n  config  = require('./user'),\n  release = require('./project/release')\n;\n\n\nmodule.exports = {\n\n  banner : release.banner,\n\n  log: {\n    created: function(file) {\n      return 'Created: ' + file;\n    },\n    modified: function(file) {\n      return 'Modified: ' + file;\n    }\n  },\n\n  filenames: {\n    concatenatedCSS            : 'semantic.css',\n    concatenatedJS             : 'semantic.js',\n    concatenatedMinifiedCSS    : 'semantic.min.css',\n    concatenatedMinifiedJS     : 'semantic.min.js',\n    concatenatedRTLCSS         : 'semantic.rtl.css',\n    concatenatedMinifiedRTLCSS : 'semantic.rtl.min.css'\n  },\n\n  regExp: {\n\n    comments: {\n\n      // remove all comments from config files (.variable)\n      variables : {\n        in  : /(\\/\\*[\\s\\S]+?\\*\\/+)[\\s\\S]+?\\/\\* End Config \\*\\//,\n        out : '$1',\n      },\n\n      // add version to first comment\n      license: {\n        in  : /(^\\/\\*[\\s\\S]+)(# Semantic UI )([\\s\\S]+?\\*\\/)/,\n        out : '$1$2' + release.version + ' $3'\n      },\n\n      // adds uniform spacing around comments\n      large: {\n        in  : /(\\/\\*\\*\\*\\*[\\s\\S]+?\\*\\/)/mg,\n        out : '\\n\\n$1\\n'\n      },\n      small: {\n        in  : /(\\/\\*---[\\s\\S]+?\\*\\/)/mg,\n        out : '\\n$1\\n'\n      },\n      tiny: {\n        in  : /(\\/\\* [\\s\\S]+? \\*\\/)/mg,\n        out : '\\n$1'\n      }\n    },\n\n    theme: /.*(\\/|\\\\)themes(\\/|\\\\).*?(?=(\\/|\\\\))/mg\n\n  },\n\n  settings: {\n\n    /* Remove Files in Clean */\n    del: {\n      silent : true\n    },\n\n    concatCSS: {\n      rebaseUrls: false\n    },\n\n    /* Comment Banners */\n    header: {\n      title      : release.title,\n      version    : release.version,\n      repository : release.repository,\n      url        : release.url\n    },\n\n    plumber: {\n      less: {\n        errorHandler: function(error) {\n          var\n            regExp = {\n              variable : /@(\\S.*?)\\s/,\n              theme    : /themes[\\/\\\\]+(.*?)[\\/\\\\].*/,\n              element  : /[\\/\\\\]([^\\/\\\\*]*)\\.overrides/\n            },\n            theme,\n            element\n          ;\n          if(error.filename.match(/theme.less/)) {\n            if(error.line == 5) {\n              element  = regExp.variable.exec(error.message)[1];\n              if(element) {\n                console.error('Missing theme.config value for ', element);\n              }\n              console.error('Most likely new UI was added in an update. You will need to add missing elements from theme.config.example');\n            }\n            if(error.line == 46) {\n              element = regExp.element.exec(error.message)[1];\n              theme   = regExp.theme.exec(error.message)[1];\n              console.error(theme + ' is not an available theme for ' + element);\n            }\n          }\n          else {\n            console.log(error);\n          }\n          this.emit('end');\n        }\n      }\n    },\n\n    /* What Browsers to Prefix */\n    prefix: {\n      browsers: [\n        'last 2 versions',\n        '> 1%',\n        'opera 12.1',\n        'bb 10',\n        'android 4'\n      ]\n    },\n\n    /* File Renames */\n    rename: {\n      minJS     : { extname : '.min.js' },\n      minCSS    : { extname : '.min.css' },\n      rtlCSS    : { extname : '.rtl.css' },\n      rtlMinCSS : { extname : '.rtl.min.css' }\n    },\n\n    /* Minified CSS Concat */\n    minify: {\n      processImport       : false,\n      restructuring       : false,\n      keepSpecialComments : 1,\n      roundingPrecision   : -1,\n    },\n\n    /* Minified JS Settings */\n    uglify: {\n      mangle   : true,\n      output: {\n        comments: 'some'\n      }\n    },\n\n    /* Minified Concat CSS Settings */\n    concatMinify: {\n      processImport       : false,\n      restructuring       : false,\n      keepSpecialComments : false,\n      roundingPrecision   : -1,\n    },\n\n    /* Minified Concat JS */\n    concatUglify: {\n      mangle   : true,\n      output: {\n        comments: 'some'\n      }\n    }\n\n  }\n};\n"]},"sourceType":"script","hash":"d6c6b1888ba65e7bc28badf17a0264a850bee9a7"}
