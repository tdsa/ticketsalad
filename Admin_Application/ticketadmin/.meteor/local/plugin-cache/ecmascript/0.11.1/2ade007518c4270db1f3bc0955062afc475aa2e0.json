{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/rtl/watch.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/rtl/watch.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/rtl/watch.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/rtl/watch.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/rtl/watch.js"}},"code":"/*******************************\n           Watch Task\n*******************************/\nvar gulp = require('gulp'),\n    // node deps\nconsole = require('better-console'),\n    fs = require('fs'),\n    // gulp deps\nautoprefixer = require('gulp-autoprefixer'),\n    chmod = require('gulp-chmod'),\n    clone = require('gulp-clone'),\n    gulpif = require('gulp-if'),\n    less = require('gulp-less'),\n    minifyCSS = require('gulp-clean-css'),\n    plumber = require('gulp-plumber'),\n    print = require('gulp-print'),\n    rename = require('gulp-rename'),\n    replace = require('gulp-replace'),\n    rtlcss = require('gulp-rtlcss'),\n    uglify = require('gulp-uglify'),\n    util = require('gulp-util'),\n    watch = require('gulp-watch'),\n    // user config\nconfig = require('../config/user'),\n    // task config\ntasks = require('../config/tasks'),\n    install = require('../config/project/install'),\n    // shorthand\nglobs = config.globs,\n    assets = config.paths.assets,\n    output = config.paths.output,\n    source = config.paths.source,\n    banner = tasks.banner,\n    comments = tasks.regExp.comments,\n    log = tasks.log,\n    settings = tasks.settings; // add internal tasks (concat release)\n\n\nrequire('../collections/internal')(gulp);\n\nmodule.exports = function (callback) {\n  if (!install.isSetup()) {\n    console.error('Cannot watch files. Run \"gulp install\" to set-up Semantic');\n    return;\n  }\n\n  console.clear();\n  console.log('Watching source files for changes');\n  /*--------------\n      Watch CSS\n  ---------------*/\n\n  gulp.watch([source.config, source.definitions + '/**/*.less', source.site + '/**/*.{overrides,variables}', source.themes + '/**/*.{overrides,variables}'], function (file) {\n    var lessPath, stream, compressedStream, uncompressedStream, isDefinition, isPackagedTheme, isSiteTheme, isConfig; // log modified file\n\n    gulp.src(file.path).pipe(print(log.modified));\n    /*--------------\n       Find Source\n    ---------------*/\n    // recompile on *.override , *.variable change\n\n    isConfig = file.path.indexOf('.config') !== -1;\n    isPackagedTheme = file.path.indexOf(source.themes) !== -1;\n    isSiteTheme = file.path.indexOf(source.site) !== -1;\n    isDefinition = file.path.indexOf(source.definitions) !== -1;\n\n    if (isConfig) {\n      console.log('Change detected in theme config'); // cant tell which theme was changed in theme.config, rebuild all\n\n      gulp.start('build');\n    } else if (isPackagedTheme) {\n      console.log('Change detected in packaged theme');\n      lessPath = lessPath.replace(tasks.regExp.theme, source.definitions);\n      lessPath = util.replaceExtension(file.path, '.less');\n    } else if (isSiteTheme) {\n      console.log('Change detected in site theme');\n      lessPath = lessPath.replace(source.site, source.definitions);\n      lessPath = util.replaceExtension(file.path, '.less');\n    } else if (isDefinition) {\n      console.log('Change detected in definition');\n      lessPath = util.replaceExtension(file.path, '.less');\n    }\n    /*--------------\n       Create CSS\n    ---------------*/\n\n\n    if (fs.existsSync(lessPath)) {\n      // unified css stream\n      stream = gulp.src(lessPath).pipe(plumber()).pipe(less(settings.less)).pipe(replace(comments.variables.in, comments.variables.out)).pipe(replace(comments.license.in, comments.license.out)).pipe(replace(comments.large.in, comments.large.out)).pipe(replace(comments.small.in, comments.small.out)).pipe(replace(comments.tiny.in, comments.tiny.out)).pipe(autoprefixer(settings.prefix)).pipe(gulpif(config.hasPermission, chmod(config.permission))).pipe(rtlcss()); // use 2 concurrent streams from same pipe\n\n      uncompressedStream = stream.pipe(clone());\n      compressedStream = stream.pipe(clone());\n      uncompressedStream.pipe(plumber()).pipe(replace(assets.source, assets.uncompressed)).pipe(rename(settings.rename.rtlCSS)).pipe(gulp.dest(output.uncompressed)).pipe(print(log.created)).on('end', function () {\n        gulp.start('package uncompressed rtl css');\n      });\n      compressedStream = stream.pipe(plumber()).pipe(replace(assets.source, assets.compressed)).pipe(minifyCSS(settings.minify)).pipe(rename(settings.rename.minCSS)).pipe(rename(settings.rename.rtlMinCSS)).pipe(gulp.dest(output.compressed)).pipe(print(log.created)).on('end', function () {\n        gulp.start('package compressed rtl css');\n      });\n    } else {\n      console.log('Cannot find UI definition at path', lessPath);\n    }\n  });\n  /*--------------\n      Watch JS\n  ---------------*/\n\n  gulp.watch([source.definitions + '/**/*.js'], function (file) {\n    gulp.src(file.path).pipe(plumber()).pipe(replace(comments.license.in, comments.license.out)).pipe(gulpif(config.hasPermission, chmod(config.permission))).pipe(gulp.dest(output.uncompressed)).pipe(print(log.created)).pipe(uglify(settings.uglify)).pipe(rename(settings.rename.minJS)).pipe(gulp.dest(output.compressed)).pipe(print(log.created)).on('end', function () {\n      gulp.start('package compressed js');\n      gulp.start('package uncompressed js');\n    });\n  });\n  /*--------------\n    Watch Assets\n  ---------------*/\n  // only copy assets that match component names (or their plural)\n\n  gulp.watch([source.themes + '/**/assets/**/' + globs.components + '?(s).*'], function (file) {\n    // copy assets\n    gulp.src(file.path, {\n      base: source.themes\n    }).pipe(gulpif(config.hasPermission, chmod(config.permission))).pipe(gulp.dest(output.themes)).pipe(print(log.created));\n  });\n};","map":{"version":3,"sources":["semantic/tasks/rtl/watch.js"],"names":["gulp","require","console","fs","autoprefixer","chmod","clone","gulpif","less","minifyCSS","plumber","print","rename","replace","rtlcss","uglify","util","watch","config","tasks","install","globs","assets","paths","output","source","banner","comments","regExp","log","settings","module","exports","callback","isSetup","error","clear","definitions","site","themes","file","lessPath","stream","compressedStream","uncompressedStream","isDefinition","isPackagedTheme","isSiteTheme","isConfig","src","path","pipe","modified","indexOf","start","theme","replaceExtension","existsSync","variables","in","out","license","large","small","tiny","prefix","hasPermission","permission","uncompressed","rtlCSS","dest","created","on","compressed","minify","minCSS","rtlMinCSS","minJS","components","base"],"mappings":"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","sourcesContent":["/*******************************\n           Watch Task\n*******************************/\n\nvar\n  gulp         = require('gulp'),\n\n  // node deps\n  console      = require('better-console'),\n  fs           = require('fs'),\n\n  // gulp deps\n  autoprefixer = require('gulp-autoprefixer'),\n  chmod        = require('gulp-chmod'),\n  clone        = require('gulp-clone'),\n  gulpif       = require('gulp-if'),\n  less         = require('gulp-less'),\n  minifyCSS    = require('gulp-clean-css'),\n  plumber      = require('gulp-plumber'),\n  print        = require('gulp-print'),\n  rename       = require('gulp-rename'),\n  replace      = require('gulp-replace'),\n  rtlcss       = require('gulp-rtlcss'),\n  uglify       = require('gulp-uglify'),\n  util         = require('gulp-util'),\n  watch        = require('gulp-watch'),\n\n  // user config\n  config       = require('../config/user'),\n\n  // task config\n  tasks        = require('../config/tasks'),\n  install      = require('../config/project/install'),\n\n  // shorthand\n  globs        = config.globs,\n  assets       = config.paths.assets,\n  output       = config.paths.output,\n  source       = config.paths.source,\n\n  banner       = tasks.banner,\n  comments     = tasks.regExp.comments,\n  log          = tasks.log,\n  settings     = tasks.settings\n\n;\n\n// add internal tasks (concat release)\nrequire('../collections/internal')(gulp);\n\nmodule.exports = function(callback) {\n\n  if( !install.isSetup() ) {\n    console.error('Cannot watch files. Run \"gulp install\" to set-up Semantic');\n    return;\n  }\n\n  console.clear();\n  console.log('Watching source files for changes');\n\n  /*--------------\n      Watch CSS\n  ---------------*/\n\n  gulp\n    .watch([\n      source.config,\n      source.definitions   + '/**/*.less',\n      source.site          + '/**/*.{overrides,variables}',\n      source.themes        + '/**/*.{overrides,variables}'\n    ], function(file) {\n\n      var\n        lessPath,\n\n        stream,\n        compressedStream,\n        uncompressedStream,\n\n        isDefinition,\n        isPackagedTheme,\n        isSiteTheme,\n        isConfig\n      ;\n\n      // log modified file\n      gulp.src(file.path)\n        .pipe(print(log.modified))\n      ;\n\n      /*--------------\n         Find Source\n      ---------------*/\n\n      // recompile on *.override , *.variable change\n      isConfig        = (file.path.indexOf('.config') !== -1);\n      isPackagedTheme = (file.path.indexOf(source.themes) !== -1);\n      isSiteTheme     = (file.path.indexOf(source.site) !== -1);\n      isDefinition    = (file.path.indexOf(source.definitions) !== -1);\n\n\n      if(isConfig) {\n        console.log('Change detected in theme config');\n        // cant tell which theme was changed in theme.config, rebuild all\n        gulp.start('build');\n      }\n      else if(isPackagedTheme) {\n        console.log('Change detected in packaged theme');\n        lessPath = lessPath.replace(tasks.regExp.theme, source.definitions);\n        lessPath = util.replaceExtension(file.path, '.less');\n      }\n      else if(isSiteTheme) {\n        console.log('Change detected in site theme');\n        lessPath = lessPath.replace(source.site, source.definitions);\n        lessPath = util.replaceExtension(file.path, '.less');\n      }\n      else if(isDefinition) {\n        console.log('Change detected in definition');\n        lessPath = util.replaceExtension(file.path, '.less');\n      }\n\n      /*--------------\n         Create CSS\n      ---------------*/\n\n      if( fs.existsSync(lessPath) ) {\n\n        // unified css stream\n        stream = gulp.src(lessPath)\n          .pipe(plumber())\n          .pipe(less(settings.less))\n          .pipe(replace(comments.variables.in, comments.variables.out))\n          .pipe(replace(comments.license.in, comments.license.out))\n          .pipe(replace(comments.large.in, comments.large.out))\n          .pipe(replace(comments.small.in, comments.small.out))\n          .pipe(replace(comments.tiny.in, comments.tiny.out))\n          .pipe(autoprefixer(settings.prefix))\n          .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n          .pipe(rtlcss())\n        ;\n\n        // use 2 concurrent streams from same pipe\n        uncompressedStream = stream.pipe(clone());\n        compressedStream   = stream.pipe(clone());\n\n        uncompressedStream\n          .pipe(plumber())\n          .pipe(replace(assets.source, assets.uncompressed))\n          .pipe(rename(settings.rename.rtlCSS))\n          .pipe(gulp.dest(output.uncompressed))\n          .pipe(print(log.created))\n          .on('end', function() {\n            gulp.start('package uncompressed rtl css');\n          })\n        ;\n\n        compressedStream = stream\n          .pipe(plumber())\n          .pipe(replace(assets.source, assets.compressed))\n          .pipe(minifyCSS(settings.minify))\n          .pipe(rename(settings.rename.minCSS))\n          .pipe(rename(settings.rename.rtlMinCSS))\n          .pipe(gulp.dest(output.compressed))\n          .pipe(print(log.created))\n          .on('end', function() {\n            gulp.start('package compressed rtl css');\n          })\n        ;\n\n      }\n      else {\n        console.log('Cannot find UI definition at path', lessPath);\n      }\n    })\n  ;\n\n  /*--------------\n      Watch JS\n  ---------------*/\n\n  gulp\n    .watch([\n      source.definitions   + '/**/*.js'\n    ], function(file) {\n      gulp.src(file.path)\n        .pipe(plumber())\n        .pipe(replace(comments.license.in, comments.license.out))\n        .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n        .pipe(gulp.dest(output.uncompressed))\n        .pipe(print(log.created))\n        .pipe(uglify(settings.uglify))\n        .pipe(rename(settings.rename.minJS))\n        .pipe(gulp.dest(output.compressed))\n        .pipe(print(log.created))\n        .on('end', function() {\n          gulp.start('package compressed js');\n          gulp.start('package uncompressed js');\n        })\n      ;\n    })\n  ;\n\n  /*--------------\n    Watch Assets\n  ---------------*/\n\n  // only copy assets that match component names (or their plural)\n  gulp\n    .watch([\n      source.themes   + '/**/assets/**/' + globs.components + '?(s).*'\n    ], function(file) {\n      // copy assets\n      gulp.src(file.path, { base: source.themes })\n        .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n        .pipe(gulp.dest(output.themes))\n        .pipe(print(log.created))\n      ;\n    })\n  ;\n\n};\n"]},"sourceType":"script","hash":"2ade007518c4270db1f3bc0955062afc475aa2e0"}
