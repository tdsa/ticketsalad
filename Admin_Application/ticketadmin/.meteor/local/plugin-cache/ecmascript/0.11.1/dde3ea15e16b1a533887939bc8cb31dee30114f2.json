{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/npm/gulpfile.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/config/npm/gulpfile.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/npm/gulpfile.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","presets":[],"generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/config/npm/gulpfile.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/config/npm/gulpfile.js"}},"code":"/*******************************\n            Set-up\n*******************************/\nvar gulp = require('gulp-help')(require('gulp')),\n    // read user config to know what task to load\nconfig = require('./tasks/config/user'),\n    // watch changes\nwatch = require('./tasks/watch'),\n    // build all files\nbuild = require('./tasks/build'),\n    buildJS = require('./tasks/build/javascript'),\n    buildCSS = require('./tasks/build/css'),\n    buildAssets = require('./tasks/build/assets'),\n    // utility\nclean = require('./tasks/clean'),\n    version = require('./tasks/version'),\n    // docs tasks\nserveDocs = require('./tasks/docs/serve'),\n    buildDocs = require('./tasks/docs/build'),\n    // rtl\nbuildRTL = require('./tasks/rtl/build'),\n    watchRTL = require('./tasks/rtl/watch');\n/*******************************\n             Tasks\n*******************************/\n\n\ngulp.task('default', false, ['watch']);\ngulp.task('watch', 'Watch for site/theme changes', watch);\ngulp.task('build', 'Builds all files from source', build);\ngulp.task('build-javascript', 'Builds all javascript from source', buildJS);\ngulp.task('build-css', 'Builds all css from source', buildCSS);\ngulp.task('build-assets', 'Copies all assets from source', buildAssets);\ngulp.task('clean', 'Clean dist folder', clean);\ngulp.task('version', 'Displays current version of Semantic', version);\n/*--------------\n      Docs\n---------------*/\n\n/*\n  Lets you serve files to a local documentation instance\n  https://github.com/Semantic-Org/Semantic-UI-Docs/\n*/\n\ngulp.task('serve-docs', 'Serve file changes to SUI Docs', serveDocs);\ngulp.task('build-docs', 'Build all files and add to SUI Docs', buildDocs);\n/*--------------\n      RTL\n---------------*/\n\nif (config.rtl) {\n  gulp.task('watch-rtl', 'Watch files as RTL', watchRTL);\n  gulp.task('build-rtl', 'Build all files as RTL', buildRTL);\n}","map":{"version":3,"sources":["semantic/tasks/config/npm/gulpfile.js"],"names":["gulp","require","config","watch","build","buildJS","buildCSS","buildAssets","clean","version","serveDocs","buildDocs","buildRTL","watchRTL","task","rtl"],"mappings":"AAAA;;;AAIA,IACEA,OAAeC,QAAQ,WAAR,EAAqBA,QAAQ,MAAR,CAArB,CADjB;AAAA,IAGE;AACAC,SAAeD,QAAQ,qBAAR,CAJjB;AAAA,IAME;AACAE,QAAeF,QAAQ,eAAR,CAPjB;AAAA,IASE;AACAG,QAAeH,QAAQ,eAAR,CAVjB;AAAA,IAWEI,UAAeJ,QAAQ,0BAAR,CAXjB;AAAA,IAYEK,WAAeL,QAAQ,mBAAR,CAZjB;AAAA,IAaEM,cAAeN,QAAQ,sBAAR,CAbjB;AAAA,IAeE;AACAO,QAAeP,QAAQ,eAAR,CAhBjB;AAAA,IAiBEQ,UAAeR,QAAQ,iBAAR,CAjBjB;AAAA,IAmBE;AACAS,YAAeT,QAAQ,oBAAR,CApBjB;AAAA,IAqBEU,YAAeV,QAAQ,oBAAR,CArBjB;AAAA,IAuBE;AACAW,WAAeX,QAAQ,mBAAR,CAxBjB;AAAA,IAyBEY,WAAeZ,QAAQ,mBAAR,CAzBjB;AA6BA;;;;;AAIAD,KAAKc,IAAL,CAAU,SAAV,EAAqB,KAArB,EAA4B,CAC1B,OAD0B,CAA5B;AAIAd,KAAKc,IAAL,CAAU,OAAV,EAAmB,8BAAnB,EAAmDX,KAAnD;AAEAH,KAAKc,IAAL,CAAU,OAAV,EAAmB,8BAAnB,EAAmDV,KAAnD;AACAJ,KAAKc,IAAL,CAAU,kBAAV,EAA8B,mCAA9B,EAAmET,OAAnE;AACAL,KAAKc,IAAL,CAAU,WAAV,EAAuB,4BAAvB,EAAqDR,QAArD;AACAN,KAAKc,IAAL,CAAU,cAAV,EAA0B,+BAA1B,EAA2DP,WAA3D;AAEAP,KAAKc,IAAL,CAAU,OAAV,EAAmB,mBAAnB,EAAwCN,KAAxC;AACAR,KAAKc,IAAL,CAAU,SAAV,EAAqB,sCAArB,EAA6DL,OAA7D;AAEA;;;;AAIA;;;;;AAKAT,KAAKc,IAAL,CAAU,YAAV,EAAwB,gCAAxB,EAA0DJ,SAA1D;AACAV,KAAKc,IAAL,CAAU,YAAV,EAAwB,qCAAxB,EAA+DH,SAA/D;AAGA;;;;AAIA,IAAGT,OAAOa,GAAV,EAAe;AACbf,OAAKc,IAAL,CAAU,WAAV,EAAuB,oBAAvB,EAA6CD,QAA7C;AACAb,OAAKc,IAAL,CAAU,WAAV,EAAuB,wBAAvB,EAAiDF,QAAjD;AACD","sourcesContent":["/*******************************\n            Set-up\n*******************************/\n\nvar\n  gulp         = require('gulp-help')(require('gulp')),\n\n  // read user config to know what task to load\n  config       = require('./tasks/config/user'),\n\n  // watch changes\n  watch        = require('./tasks/watch'),\n\n  // build all files\n  build        = require('./tasks/build'),\n  buildJS      = require('./tasks/build/javascript'),\n  buildCSS     = require('./tasks/build/css'),\n  buildAssets  = require('./tasks/build/assets'),\n\n  // utility\n  clean        = require('./tasks/clean'),\n  version      = require('./tasks/version'),\n\n  // docs tasks\n  serveDocs    = require('./tasks/docs/serve'),\n  buildDocs    = require('./tasks/docs/build'),\n\n  // rtl\n  buildRTL     = require('./tasks/rtl/build'),\n  watchRTL     = require('./tasks/rtl/watch')\n;\n\n\n/*******************************\n             Tasks\n*******************************/\n\ngulp.task('default', false, [\n  'watch'\n]);\n\ngulp.task('watch', 'Watch for site/theme changes', watch);\n\ngulp.task('build', 'Builds all files from source', build);\ngulp.task('build-javascript', 'Builds all javascript from source', buildJS);\ngulp.task('build-css', 'Builds all css from source', buildCSS);\ngulp.task('build-assets', 'Copies all assets from source', buildAssets);\n\ngulp.task('clean', 'Clean dist folder', clean);\ngulp.task('version', 'Displays current version of Semantic', version);\n\n/*--------------\n      Docs\n---------------*/\n\n/*\n  Lets you serve files to a local documentation instance\n  https://github.com/Semantic-Org/Semantic-UI-Docs/\n*/\n\ngulp.task('serve-docs', 'Serve file changes to SUI Docs', serveDocs);\ngulp.task('build-docs', 'Build all files and add to SUI Docs', buildDocs);\n\n\n/*--------------\n      RTL\n---------------*/\n\nif(config.rtl) {\n  gulp.task('watch-rtl', 'Watch files as RTL', watchRTL);\n  gulp.task('build-rtl', 'Build all files as RTL', buildRTL);\n}\n"]},"sourceType":"script","hash":"dde3ea15e16b1a533887939bc8cb31dee30114f2"}
