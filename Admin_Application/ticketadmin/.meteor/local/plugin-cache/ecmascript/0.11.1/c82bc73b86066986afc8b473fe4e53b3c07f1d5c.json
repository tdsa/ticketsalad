{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/build/javascript.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/build/javascript.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/build/javascript.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/build/javascript.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/build/javascript.js"}},"code":"/*******************************\n          Build Task\n*******************************/\nvar gulp = require('gulp'),\n    // node dependencies\nconsole = require('better-console'),\n    fs = require('fs'),\n    // gulp dependencies\nchmod = require('gulp-chmod'),\n    flatten = require('gulp-flatten'),\n    gulpif = require('gulp-if'),\n    plumber = require('gulp-plumber'),\n    print = require('gulp-print'),\n    rename = require('gulp-rename'),\n    replace = require('gulp-replace'),\n    uglify = require('gulp-uglify'),\n    // config\nconfig = require('../config/user'),\n    tasks = require('../config/tasks'),\n    install = require('../config/project/install'),\n    // shorthand\nglobs = config.globs,\n    assets = config.paths.assets,\n    output = config.paths.output,\n    source = config.paths.source,\n    banner = tasks.banner,\n    comments = tasks.regExp.comments,\n    log = tasks.log,\n    settings = tasks.settings; // add internal tasks (concat release)\n\n\nrequire('../collections/internal')(gulp);\n\nmodule.exports = function (callback) {\n  var stream, compressedStream, uncompressedStream;\n  console.info('Building Javascript');\n\n  if (!install.isSetup()) {\n    console.error('Cannot build files. Run \"gulp install\" to set-up Semantic');\n    return;\n  } // copy source javascript\n\n\n  gulp.src(source.definitions + '/**/' + globs.components + '.js').pipe(plumber()).pipe(flatten()).pipe(replace(comments.license.in, comments.license.out)).pipe(gulp.dest(output.uncompressed)).pipe(gulpif(config.hasPermission, chmod(config.permission))).pipe(print(log.created)).pipe(uglify(settings.uglify)).pipe(rename(settings.rename.minJS)).pipe(gulp.dest(output.compressed)).pipe(gulpif(config.hasPermission, chmod(config.permission))).pipe(print(log.created)).on('end', function () {\n    gulp.start('package compressed js');\n    gulp.start('package uncompressed js');\n    callback();\n  });\n};","map":{"version":3,"sources":["semantic/tasks/build/javascript.js"],"names":["gulp","require","console","fs","chmod","flatten","gulpif","plumber","print","rename","replace","uglify","config","tasks","install","globs","assets","paths","output","source","banner","comments","regExp","log","settings","module","exports","callback","stream","compressedStream","uncompressedStream","info","isSetup","error","src","definitions","components","pipe","license","in","out","dest","uncompressed","hasPermission","permission","created","minJS","compressed","on","start"],"mappings":"AAAA;;;AAIA,IACEA,OAAeC,QAAQ,MAAR,CADjB;AAAA,IAGE;AACAC,UAAeD,QAAQ,gBAAR,CAJjB;AAAA,IAKEE,KAAeF,QAAQ,IAAR,CALjB;AAAA,IAOE;AACAG,QAAeH,QAAQ,YAAR,CARjB;AAAA,IASEI,UAAeJ,QAAQ,cAAR,CATjB;AAAA,IAUEK,SAAeL,QAAQ,SAAR,CAVjB;AAAA,IAWEM,UAAeN,QAAQ,cAAR,CAXjB;AAAA,IAYEO,QAAeP,QAAQ,YAAR,CAZjB;AAAA,IAaEQ,SAAeR,QAAQ,aAAR,CAbjB;AAAA,IAcES,UAAeT,QAAQ,cAAR,CAdjB;AAAA,IAeEU,SAAeV,QAAQ,aAAR,CAfjB;AAAA,IAiBE;AACAW,SAAeX,QAAQ,gBAAR,CAlBjB;AAAA,IAmBEY,QAAeZ,QAAQ,iBAAR,CAnBjB;AAAA,IAoBEa,UAAeb,QAAQ,2BAAR,CApBjB;AAAA,IAsBE;AACAc,QAAeH,OAAOG,KAvBxB;AAAA,IAwBEC,SAAeJ,OAAOK,KAAP,CAAaD,MAxB9B;AAAA,IAyBEE,SAAeN,OAAOK,KAAP,CAAaC,MAzB9B;AAAA,IA0BEC,SAAeP,OAAOK,KAAP,CAAaE,MA1B9B;AAAA,IA4BEC,SAAeP,MAAMO,MA5BvB;AAAA,IA6BEC,WAAeR,MAAMS,MAAN,CAAaD,QA7B9B;AAAA,IA8BEE,MAAeV,MAAMU,GA9BvB;AAAA,IA+BEC,WAAeX,MAAMW,QA/BvB,C,CAkCA;;;AACAvB,QAAQ,yBAAR,EAAmCD,IAAnC;;AAEAyB,OAAOC,OAAP,GAAiB,UAASC,QAAT,EAAmB;AAElC,MACEC,MADF,EAEEC,gBAFF,EAGEC,kBAHF;AAMA5B,UAAQ6B,IAAR,CAAa,qBAAb;;AAEA,MAAI,CAACjB,QAAQkB,OAAR,EAAL,EAAyB;AACvB9B,YAAQ+B,KAAR,CAAc,2DAAd;AACA;AACD,GAbiC,CAelC;;;AACAjC,OAAKkC,GAAL,CAASf,OAAOgB,WAAP,GAAqB,MAArB,GAA8BpB,MAAMqB,UAApC,GAAiD,KAA1D,EACGC,IADH,CACQ9B,SADR,EAEG8B,IAFH,CAEQhC,SAFR,EAGGgC,IAHH,CAGQ3B,QAAQW,SAASiB,OAAT,CAAiBC,EAAzB,EAA6BlB,SAASiB,OAAT,CAAiBE,GAA9C,CAHR,EAIGH,IAJH,CAIQrC,KAAKyC,IAAL,CAAUvB,OAAOwB,YAAjB,CAJR,EAKGL,IALH,CAKQ/B,OAAOM,OAAO+B,aAAd,EAA6BvC,MAAMQ,OAAOgC,UAAb,CAA7B,CALR,EAMGP,IANH,CAMQ7B,MAAMe,IAAIsB,OAAV,CANR,EAOGR,IAPH,CAOQ1B,OAAOa,SAASb,MAAhB,CAPR,EAQG0B,IARH,CAQQ5B,OAAOe,SAASf,MAAT,CAAgBqC,KAAvB,CARR,EASGT,IATH,CASQrC,KAAKyC,IAAL,CAAUvB,OAAO6B,UAAjB,CATR,EAUGV,IAVH,CAUQ/B,OAAOM,OAAO+B,aAAd,EAA6BvC,MAAMQ,OAAOgC,UAAb,CAA7B,CAVR,EAWGP,IAXH,CAWQ7B,MAAMe,IAAIsB,OAAV,CAXR,EAYGG,EAZH,CAYM,KAZN,EAYa,YAAW;AACpBhD,SAAKiD,KAAL,CAAW,uBAAX;AACAjD,SAAKiD,KAAL,CAAW,yBAAX;AACAtB;AACD,GAhBH;AAmBD,CAnCD","sourcesContent":["/*******************************\n          Build Task\n*******************************/\n\nvar\n  gulp         = require('gulp'),\n\n  // node dependencies\n  console      = require('better-console'),\n  fs           = require('fs'),\n\n  // gulp dependencies\n  chmod        = require('gulp-chmod'),\n  flatten      = require('gulp-flatten'),\n  gulpif       = require('gulp-if'),\n  plumber      = require('gulp-plumber'),\n  print        = require('gulp-print'),\n  rename       = require('gulp-rename'),\n  replace      = require('gulp-replace'),\n  uglify       = require('gulp-uglify'),\n\n  // config\n  config       = require('../config/user'),\n  tasks        = require('../config/tasks'),\n  install      = require('../config/project/install'),\n\n  // shorthand\n  globs        = config.globs,\n  assets       = config.paths.assets,\n  output       = config.paths.output,\n  source       = config.paths.source,\n\n  banner       = tasks.banner,\n  comments     = tasks.regExp.comments,\n  log          = tasks.log,\n  settings     = tasks.settings\n;\n\n// add internal tasks (concat release)\nrequire('../collections/internal')(gulp);\n\nmodule.exports = function(callback) {\n\n  var\n    stream,\n    compressedStream,\n    uncompressedStream\n  ;\n\n  console.info('Building Javascript');\n\n  if( !install.isSetup() ) {\n    console.error('Cannot build files. Run \"gulp install\" to set-up Semantic');\n    return;\n  }\n\n  // copy source javascript\n  gulp.src(source.definitions + '/**/' + globs.components + '.js')\n    .pipe(plumber())\n    .pipe(flatten())\n    .pipe(replace(comments.license.in, comments.license.out))\n    .pipe(gulp.dest(output.uncompressed))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(print(log.created))\n    .pipe(uglify(settings.uglify))\n    .pipe(rename(settings.rename.minJS))\n    .pipe(gulp.dest(output.compressed))\n    .pipe(gulpif(config.hasPermission, chmod(config.permission)))\n    .pipe(print(log.created))\n    .on('end', function() {\n      gulp.start('package compressed js');\n      gulp.start('package uncompressed js');\n      callback();\n    })\n  ;\n\n};"]},"sourceType":"script","hash":"c82bc73b86066986afc8b473fe4e53b3c07f1d5c"}
