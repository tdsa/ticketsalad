{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/admin/distributions/init.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/admin/distributions/init.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/admin/distributions/init.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/admin/distributions/init.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/admin/distributions/init.js"}},"code":"/*******************************\n        Init Dist Repos\n*******************************/\n\n/*\n\n This task pulls the latest version of distribution from GitHub\n\n  * Creates new repo if doesnt exist (locally & GitHub)\n  * Adds remote it doesnt exists\n  * Pulls latest changes from repo\n\n*/\nvar gulp = require('gulp'),\n    // node dependencies\nconsole = require('better-console'),\n    del = require('del'),\n    fs = require('fs'),\n    path = require('path'),\n    git = require('gulp-git'),\n    githubAPI = require('github'),\n    mkdirp = require('mkdirp'),\n    // admin files\ngithub = require('../../config/admin/github.js'),\n    release = require('../../config/admin/release'),\n    project = require('../../config/project/release'),\n    // oAuth configuration for GitHub\noAuth = fs.existsSync(__dirname + '/../../config/admin/oauth.js') ? require('../../config/admin/oauth') : false,\n    // shorthand\nversion = project.version;\n\nmodule.exports = function (callback) {\n  var index = -1,\n      total = release.distributions.length,\n      timer,\n      stream,\n      stepRepo;\n\n  if (!oAuth) {\n    console.error('Must add oauth token for GitHub in tasks/config/admin/oauth.js');\n    return;\n  } // Do Git commands synchronously per component, to avoid issues\n\n\n  stepRepo = function () {\n    index = index + 1;\n\n    if (index >= total) {\n      callback();\n      return;\n    }\n\n    var component = release.distributions[index],\n        lowerCaseComponent = component.toLowerCase(),\n        outputDirectory = path.resolve(release.outputRoot + lowerCaseComponent),\n        repoName = release.distRepoRoot + component,\n        gitOptions = {\n      cwd: outputDirectory\n    },\n        pullOptions = {\n      args: '-q',\n      cwd: outputDirectory,\n      quiet: true\n    },\n        resetOptions = {\n      args: '-q --hard',\n      cwd: outputDirectory,\n      quiet: true\n    },\n        gitURL = 'git@github.com:' + release.org + '/' + repoName + '.git',\n        repoURL = 'https://github.com/' + release.org + '/' + repoName + '/',\n        localRepoSetup = fs.existsSync(path.join(outputDirectory, '.git'));\n    console.log('Processing repository: ' + outputDirectory); // create folder if doesn't exist\n\n    if (!fs.existsSync(outputDirectory)) {\n      mkdirp.sync(outputDirectory);\n    } // clean folder\n\n\n    if (release.outputRoot.search('../repos') == 0) {\n      console.info('Cleaning dir', outputDirectory);\n      del.sync([outputDirectory + '**/*'], {\n        silent: true,\n        force: true\n      });\n    } // set-up local repo\n\n\n    function setupRepo() {\n      if (localRepoSetup) {\n        addRemote();\n      } else {\n        initRepo();\n      }\n    }\n\n    function initRepo() {\n      console.info('Initializing repository for ' + component);\n      git.init(gitOptions, function (error) {\n        if (error) {\n          console.error('Error initializing repo', error);\n        }\n\n        addRemote();\n      });\n    }\n\n    function createRepo() {\n      console.info('Creating GitHub repo ' + repoURL);\n      github.repos.createFromOrg({\n        org: release.org,\n        name: repoName,\n        homepage: release.homepage\n      }, function () {\n        setupRepo();\n      });\n    }\n\n    function addRemote() {\n      console.info('Adding remote origin as ' + gitURL);\n      git.addRemote('origin', gitURL, gitOptions, function () {\n        pullFiles();\n      });\n    }\n\n    function pullFiles() {\n      console.info('Pulling ' + component + ' files');\n      git.pull('origin', 'master', pullOptions, function (error) {\n        resetFiles();\n      });\n    }\n\n    function resetFiles() {\n      console.info('Resetting files to head');\n      git.reset('HEAD', resetOptions, function (error) {\n        nextRepo();\n      });\n    }\n\n    function nextRepo() {\n      //console.log('Sleeping for 1 second...');\n      // avoid rate throttling\n      global.clearTimeout(timer);\n      timer = global.setTimeout(function () {\n        stepRepo();\n      }, 0);\n    }\n\n    if (localRepoSetup) {\n      pullFiles();\n    } else {\n      setupRepo(); // createRepo() only use to create remote repo (easier to do manually)\n    }\n  };\n\n  stepRepo();\n};","map":{"version":3,"sources":["semantic/tasks/admin/distributions/init.js"],"names":["gulp","require","console","del","fs","path","git","githubAPI","mkdirp","github","release","project","oAuth","existsSync","__dirname","version","module","exports","callback","index","total","distributions","length","timer","stream","stepRepo","error","component","lowerCaseComponent","toLowerCase","outputDirectory","resolve","outputRoot","repoName","distRepoRoot","gitOptions","cwd","pullOptions","args","quiet","resetOptions","gitURL","org","repoURL","localRepoSetup","join","log","sync","search","info","silent","force","setupRepo","addRemote","initRepo","init","createRepo","repos","createFromOrg","name","homepage","pullFiles","pull","resetFiles","reset","nextRepo","global","clearTimeout","setTimeout"],"mappings":"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","sourcesContent":["/*******************************\n        Init Dist Repos\n*******************************/\n\n/*\n\n This task pulls the latest version of distribution from GitHub\n\n  * Creates new repo if doesnt exist (locally & GitHub)\n  * Adds remote it doesnt exists\n  * Pulls latest changes from repo\n\n*/\n\nvar\n  gulp      = require('gulp'),\n\n  // node dependencies\n  console   = require('better-console'),\n  del       = require('del'),\n  fs        = require('fs'),\n  path      = require('path'),\n  git       = require('gulp-git'),\n  githubAPI = require('github'),\n  mkdirp    = require('mkdirp'),\n\n  // admin files\n  github    = require('../../config/admin/github.js'),\n  release   = require('../../config/admin/release'),\n  project   = require('../../config/project/release'),\n\n\n  // oAuth configuration for GitHub\n  oAuth     = fs.existsSync(__dirname + '/../../config/admin/oauth.js')\n    ? require('../../config/admin/oauth')\n    : false,\n\n  // shorthand\n  version = project.version\n;\n\nmodule.exports = function(callback) {\n\n  var\n    index = -1,\n    total = release.distributions.length,\n    timer,\n    stream,\n    stepRepo\n  ;\n\n  if(!oAuth) {\n    console.error('Must add oauth token for GitHub in tasks/config/admin/oauth.js');\n    return;\n  }\n\n  // Do Git commands synchronously per component, to avoid issues\n  stepRepo = function() {\n\n    index = index + 1;\n\n    if(index >= total) {\n      callback();\n      return;\n    }\n\n    var\n      component          = release.distributions[index],\n      lowerCaseComponent = component.toLowerCase(),\n      outputDirectory    = path.resolve(release.outputRoot + lowerCaseComponent),\n      repoName           = release.distRepoRoot + component,\n\n      gitOptions         = { cwd: outputDirectory },\n      pullOptions        = { args: '-q', cwd: outputDirectory, quiet: true },\n      resetOptions       = { args: '-q --hard', cwd: outputDirectory, quiet: true },\n      gitURL             = 'git@github.com:' + release.org + '/' + repoName + '.git',\n      repoURL            = 'https://github.com/' + release.org + '/' + repoName + '/',\n      localRepoSetup     = fs.existsSync(path.join(outputDirectory, '.git'))\n    ;\n\n    console.log('Processing repository: ' + outputDirectory);\n\n    // create folder if doesn't exist\n    if( !fs.existsSync(outputDirectory) ) {\n      mkdirp.sync(outputDirectory);\n    }\n\n    // clean folder\n    if(release.outputRoot.search('../repos') == 0) {\n      console.info('Cleaning dir', outputDirectory);\n      del.sync([outputDirectory + '**/*'], {silent: true, force: true});\n    }\n\n    // set-up local repo\n    function setupRepo() {\n      if(localRepoSetup) {\n        addRemote();\n      }\n      else {\n        initRepo();\n      }\n    }\n\n    function initRepo() {\n      console.info('Initializing repository for ' + component);\n      git.init(gitOptions, function(error) {\n        if(error) {\n          console.error('Error initializing repo', error);\n        }\n        addRemote();\n      });\n    }\n\n    function createRepo() {\n      console.info('Creating GitHub repo ' + repoURL);\n      github.repos.createFromOrg({\n        org      : release.org,\n        name     : repoName,\n        homepage : release.homepage\n      }, function() {\n        setupRepo();\n      });\n    }\n\n    function addRemote() {\n      console.info('Adding remote origin as ' + gitURL);\n      git.addRemote('origin', gitURL, gitOptions, function(){\n        pullFiles();\n      });\n    }\n\n    function pullFiles() {\n      console.info('Pulling ' + component + ' files');\n      git.pull('origin', 'master', pullOptions, function(error) {\n        resetFiles();\n      });\n    }\n\n    function resetFiles() {\n      console.info('Resetting files to head');\n      git.reset('HEAD', resetOptions, function(error) {\n        nextRepo();\n      });\n    }\n\n    function nextRepo() {\n      //console.log('Sleeping for 1 second...');\n      // avoid rate throttling\n      global.clearTimeout(timer);\n      timer = global.setTimeout(function() {\n        stepRepo()\n      }, 0);\n    }\n\n\n    if(localRepoSetup) {\n      pullFiles();\n    }\n    else {\n      setupRepo();\n      // createRepo() only use to create remote repo (easier to do manually)\n    }\n\n  };\n\n  stepRepo();\n\n\n};\n"]},"sourceType":"script","hash":"f8607f601eddfd0554e7e866b823ac82159e850d"}
