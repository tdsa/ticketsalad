{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/admin/components/create.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"semantic/tasks/admin/components/create.js","filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/admin/components/create.js","passPerPreset":false,"envName":"development","cwd":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","root":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin","generatorOpts":{"filename":"/Users/tristan/Documents/Uni/2018/Semester 2/COS 301/Group Project/TicketSalad/ticketsalad/Admin_Application/ticketadmin/semantic/tasks/admin/components/create.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"semantic/tasks/admin/components/create.js"}},"code":"/*******************************\n     Create Component Repos\n*******************************/\n\n/*\n This will create individual component repositories for each SUI component\n\n  * copy component files from release\n  * create commonjs files as index.js for NPM release\n  * create release notes that filter only items related to component\n  * custom package.json file from template\n  * create bower.json from template\n  * create README from template\n  * create meteor.js file\n*/\nvar gulp = require('gulp'),\n    // node dependencies\nconsole = require('better-console'),\n    del = require('del'),\n    fs = require('fs'),\n    path = require('path'),\n    runSequence = require('run-sequence'),\n    // admin dependencies\nconcatFileNames = require('gulp-concat-filenames'),\n    debug = require('gulp-debug'),\n    flatten = require('gulp-flatten'),\n    git = require('gulp-git'),\n    jsonEditor = require('gulp-json-editor'),\n    plumber = require('gulp-plumber'),\n    rename = require('gulp-rename'),\n    replace = require('gulp-replace'),\n    tap = require('gulp-tap'),\n    util = require('gulp-util'),\n    // config\nconfig = require('../../config/user'),\n    release = require('../../config/admin/release'),\n    project = require('../../config/project/release'),\n    // shorthand\nversion = project.version,\n    output = config.paths.output;\n\nmodule.exports = function (callback) {\n  var stream,\n      index,\n      tasks = [];\n\n  for (index in meteorBabelHelpers.sanitizeForInObject(release.components)) {\n    var component = release.components[index]; // streams... designed to save time and make coding fun...\n\n    (function (component) {\n      var outputDirectory = path.join(release.outputRoot, component),\n          isJavascript = fs.existsSync(output.compressed + component + '.js'),\n          isCSS = fs.existsSync(output.compressed + component + '.css'),\n          capitalizedComponent = component.charAt(0).toUpperCase() + component.slice(1),\n          packageName = release.packageRoot + component,\n          repoName = release.componentRepoRoot + capitalizedComponent,\n          gitURL = 'https://github.com/' + release.org + '/' + repoName + '.git',\n          repoURL = 'https://github.com/' + release.org + '/' + repoName + '/',\n          concatSettings = {\n        newline: '',\n        root: outputDirectory,\n        prepend: \"    '\",\n        append: \"',\"\n      },\n          regExp = {\n        match: {\n          // templated values\n          name: '{component}',\n          titleName: '{Component}',\n          version: '{version}',\n          files: '{files}',\n          // release notes\n          spacedVersions: /(###.*\\n)\\n+(?=###)/gm,\n          spacedLists: /(^- .*\\n)\\n+(?=^-)/gm,\n          trim: /^\\s+|\\s+$/g,\n          unrelatedNotes: new RegExp('^((?!(^.*(' + component + ').*$|###.*)).)*$', 'gmi'),\n          whitespace: /\\n\\s*\\n\\s*\\n/gm,\n          // npm\n          componentExport: /(.*)\\$\\.fn\\.\\w+\\s*=\\s*function\\(([^\\)]*)\\)\\s*{/g,\n          componentReference: '$.fn.' + component,\n          settingsExport: /\\$\\.fn\\.\\w+\\.settings\\s*=/g,\n          settingsReference: /\\$\\.fn\\.\\w+\\.settings/g,\n          trailingComma: /,(?=[^,]*$)/,\n          jQuery: /jQuery/g\n        },\n        replace: {\n          // readme\n          name: component,\n          titleName: capitalizedComponent,\n          // release notes\n          spacedVersions: '',\n          spacedLists: '$1',\n          trim: '',\n          unrelatedNotes: '',\n          whitespace: '\\n\\n',\n          // npm\n          componentExport: 'var _module = module;\\n$1module.exports = function($2) {',\n          componentReference: '_module.exports',\n          settingsExport: 'module.exports.settings =',\n          settingsReference: '_module.exports.settings',\n          jQuery: 'require(\"jquery\")'\n        }\n      },\n          task = {\n        all: component + ' creating',\n        repo: component + ' create repo',\n        bower: component + ' create bower.json',\n        readme: component + ' create README',\n        npm: component + ' create NPM Module',\n        notes: component + ' create release notes',\n        composer: component + ' create composer.json',\n        \"package\": component + ' create package.json',\n        meteor: component + ' create meteor package.js'\n      },\n          // paths to includable assets\n      manifest = {\n        assets: outputDirectory + '/assets/**/' + component + '?(s).*',\n        component: outputDirectory + '/' + component + '+(.js|.css)'\n      }; // copy dist files into output folder adjusting asset paths\n\n      gulp.task(task.repo, false, function () {\n        return gulp.src(release.source + component + '.*').pipe(plumber()).pipe(flatten()).pipe(replace(release.paths.source, release.paths.output)).pipe(gulp.dest(outputDirectory));\n      }); // create npm module\n\n      gulp.task(task.npm, false, function () {\n        return gulp.src(release.source + component + '!(*.min|*.map).js').pipe(plumber()).pipe(flatten()).pipe(replace(regExp.match.componentExport, regExp.replace.componentExport)).pipe(replace(regExp.match.componentReference, regExp.replace.componentReference)).pipe(replace(regExp.match.settingsExport, regExp.replace.settingsExport)).pipe(replace(regExp.match.settingsReference, regExp.replace.settingsReference)).pipe(replace(regExp.match.jQuery, regExp.replace.jQuery)).pipe(rename('index.js')).pipe(gulp.dest(outputDirectory));\n      }); // create readme\n\n      gulp.task(task.readme, false, function () {\n        return gulp.src(release.templates.readme).pipe(plumber()).pipe(flatten()).pipe(replace(regExp.match.name, regExp.replace.name)).pipe(replace(regExp.match.titleName, regExp.replace.titleName)).pipe(gulp.dest(outputDirectory));\n      }); // extend bower.json\n\n      gulp.task(task.bower, false, function () {\n        return gulp.src(release.templates.bower).pipe(plumber()).pipe(flatten()).pipe(jsonEditor(function (bower) {\n          bower.name = packageName;\n          bower.description = capitalizedComponent + ' - Semantic UI';\n\n          if (isJavascript) {\n            if (isCSS) {\n              bower.main = [component + '.js', component + '.css'];\n            } else {\n              bower.main = [component + '.js'];\n            }\n\n            bower.dependencies = {\n              jquery: '>=1.8'\n            };\n          } else {\n            bower.main = [component + '.css'];\n          }\n\n          return bower;\n        })).pipe(gulp.dest(outputDirectory));\n      }); // extend package.json\n\n      gulp.task(task.package, false, function () {\n        return gulp.src(release.templates.package).pipe(plumber()).pipe(flatten()).pipe(jsonEditor(function (npm) {\n          if (isJavascript) {\n            npm.dependencies = {\n              jquery: 'x.x.x'\n            };\n            npm.main = 'index.js';\n          }\n\n          npm.name = packageName;\n\n          if (version) {\n            npm.version = version;\n          }\n\n          npm.title = 'Semantic UI - ' + capitalizedComponent;\n          npm.description = 'Single component release of ' + component;\n          npm.repository = {\n            type: 'git',\n            url: gitURL\n          };\n          return npm;\n        })).pipe(gulp.dest(outputDirectory));\n      }); // extend composer.json\n\n      gulp.task(task.composer, false, function () {\n        return gulp.src(release.templates.composer).pipe(plumber()).pipe(flatten()).pipe(jsonEditor(function (composer) {\n          if (isJavascript) {\n            composer.dependencies = {\n              jquery: 'x.x.x'\n            };\n            composer.main = component + '.js';\n          }\n\n          composer.name = 'semantic/' + component;\n\n          if (version) {\n            composer.version = version;\n          }\n\n          composer.description = 'Single component release of ' + component;\n          return composer;\n        })).pipe(gulp.dest(outputDirectory));\n      }); // create release notes\n\n      gulp.task(task.notes, false, function () {\n        return gulp.src(release.templates.notes).pipe(plumber()).pipe(flatten()) // Remove release notes for lines not mentioning component\n        .pipe(replace(regExp.match.unrelatedNotes, regExp.replace.unrelatedNotes)).pipe(replace(regExp.match.whitespace, regExp.replace.whitespace)).pipe(replace(regExp.match.spacedVersions, regExp.replace.spacedVersions)).pipe(replace(regExp.match.spacedLists, regExp.replace.spacedLists)).pipe(replace(regExp.match.trim, regExp.replace.trim)).pipe(gulp.dest(outputDirectory));\n      }); // Creates meteor package.js\n\n      gulp.task(task.meteor, function () {\n        var filenames = '';\n        return gulp.src(manifest.component).pipe(concatFileNames('empty.txt', concatSettings)).pipe(tap(function (file) {\n          filenames += file.contents;\n        })).on('end', function () {\n          gulp.src(manifest.assets).pipe(concatFileNames('empty.txt', concatSettings)).pipe(tap(function (file) {\n            filenames += file.contents;\n          })).on('end', function () {\n            // remove trailing slash\n            filenames = filenames.replace(regExp.match.trailingComma, '').trim();\n            gulp.src(release.templates.meteor.component).pipe(plumber()).pipe(flatten()).pipe(replace(regExp.match.name, regExp.replace.name)).pipe(replace(regExp.match.titleName, regExp.replace.titleName)).pipe(replace(regExp.match.version, version)).pipe(replace(regExp.match.files, filenames)).pipe(rename(release.files.meteor)).pipe(gulp.dest(outputDirectory));\n          });\n        });\n      }); // synchronous tasks in orchestrator? I think not\n\n      gulp.task(task.all, false, function (callback) {\n        runSequence([task.repo, task.npm, task.bower, task.readme, task.package, task.composer, task.notes, task.meteor], callback);\n      });\n      tasks.push(task.all);\n    })(component);\n  }\n\n  runSequence(tasks, callback);\n};","map":{"version":3,"sources":["semantic/tasks/admin/components/create.js"],"names":["gulp","require","console","del","fs","path","runSequence","concatFileNames","debug","flatten","git","jsonEditor","plumber","rename","replace","tap","util","config","release","project","version","output","paths","module","exports","callback","stream","index","tasks","components","component","outputDirectory","join","outputRoot","isJavascript","existsSync","compressed","isCSS","capitalizedComponent","charAt","toUpperCase","slice","packageName","packageRoot","repoName","componentRepoRoot","gitURL","org","repoURL","concatSettings","newline","root","prepend","append","regExp","match","name","titleName","files","spacedVersions","spacedLists","trim","unrelatedNotes","RegExp","whitespace","componentExport","componentReference","settingsExport","settingsReference","trailingComma","jQuery","task","all","repo","bower","readme","npm","notes","composer","meteor","manifest","assets","src","source","pipe","dest","templates","description","main","dependencies","jquery","package","title","repository","type","url","filenames","file","contents","on","push"],"mappings":"AAAA;;;;AAIA;;;;;;;;;;;AAYA,IACEA,OAAkBC,QAAQ,MAAR,CADpB;AAAA,IAGE;AACAC,UAAkBD,QAAQ,gBAAR,CAJpB;AAAA,IAKEE,MAAkBF,QAAQ,KAAR,CALpB;AAAA,IAMEG,KAAkBH,QAAQ,IAAR,CANpB;AAAA,IAOEI,OAAkBJ,QAAQ,MAAR,CAPpB;AAAA,IAQEK,cAAkBL,QAAQ,cAAR,CARpB;AAAA,IAUE;AACAM,kBAAkBN,QAAQ,uBAAR,CAXpB;AAAA,IAYEO,QAAkBP,QAAQ,YAAR,CAZpB;AAAA,IAaEQ,UAAkBR,QAAQ,cAAR,CAbpB;AAAA,IAcES,MAAkBT,QAAQ,UAAR,CAdpB;AAAA,IAeEU,aAAkBV,QAAQ,kBAAR,CAfpB;AAAA,IAgBEW,UAAkBX,QAAQ,cAAR,CAhBpB;AAAA,IAiBEY,SAAkBZ,QAAQ,aAAR,CAjBpB;AAAA,IAkBEa,UAAkBb,QAAQ,cAAR,CAlBpB;AAAA,IAmBEc,MAAkBd,QAAQ,UAAR,CAnBpB;AAAA,IAoBEe,OAAkBf,QAAQ,WAAR,CApBpB;AAAA,IAsBE;AACAgB,SAAkBhB,QAAQ,mBAAR,CAvBpB;AAAA,IAwBEiB,UAAkBjB,QAAQ,4BAAR,CAxBpB;AAAA,IAyBEkB,UAAkBlB,QAAQ,8BAAR,CAzBpB;AAAA,IA2BE;AACAmB,UAAkBD,QAAQC,OA5B5B;AAAA,IA6BEC,SAAkBJ,OAAOK,KAAP,CAAaD,MA7BjC;;AAkCAE,OAAOC,OAAP,GAAiB,UAASC,QAAT,EAAmB;AAClC,MACEC,MADF;AAAA,MAEEC,KAFF;AAAA,MAGEC,QAAQ,EAHV;;AAMA,OAAID,KAAJ,2CAAaT,QAAQW,UAArB,GAAiC;AAE/B,QACEC,YAAYZ,QAAQW,UAAR,CAAmBF,KAAnB,CADd,CAF+B,CAM/B;;AACA,KAAC,UAASG,SAAT,EAAoB;AAEnB,UACEC,kBAAuB1B,KAAK2B,IAAL,CAAUd,QAAQe,UAAlB,EAA8BH,SAA9B,CADzB;AAAA,UAEEI,eAAuB9B,GAAG+B,UAAH,CAAcd,OAAOe,UAAP,GAAoBN,SAApB,GAAgC,KAA9C,CAFzB;AAAA,UAGEO,QAAuBjC,GAAG+B,UAAH,CAAcd,OAAOe,UAAP,GAAoBN,SAApB,GAAgC,MAA9C,CAHzB;AAAA,UAIEQ,uBAAuBR,UAAUS,MAAV,CAAiB,CAAjB,EAAoBC,WAApB,KAAoCV,UAAUW,KAAV,CAAgB,CAAhB,CAJ7D;AAAA,UAKEC,cAAuBxB,QAAQyB,WAAR,GAAsBb,SAL/C;AAAA,UAMEc,WAAuB1B,QAAQ2B,iBAAR,GAA4BP,oBANrD;AAAA,UAOEQ,SAAuB,wBAAwB5B,QAAQ6B,GAAhC,GAAsC,GAAtC,GAA4CH,QAA5C,GAAuD,MAPhF;AAAA,UAQEI,UAAuB,wBAAwB9B,QAAQ6B,GAAhC,GAAsC,GAAtC,GAA4CH,QAA5C,GAAuD,GARhF;AAAA,UASEK,iBAAiB;AACfC,iBAAU,EADK;AAEfC,cAAUpB,eAFK;AAGfqB,iBAAU,OAHK;AAIfC,gBAAU;AAJK,OATnB;AAAA,UAeEC,SAAuB;AACrBC,eAAmB;AACjB;AACAC,gBAAY,aAFK;AAGjBC,qBAAY,aAHK;AAIjBrC,mBAAY,WAJK;AAKjBsC,iBAAY,SALK;AAMjB;AACAC,0BAAoB,uBAPH;AAQjBC,uBAAoB,sBARH;AASjBC,gBAAoB,YATH;AAUjBC,0BAAoB,IAAIC,MAAJ,CAAW,eAAejC,SAAf,GAA2B,kBAAtC,EAA0D,KAA1D,CAVH;AAWjBkC,sBAAoB,gBAXH;AAYjB;AACAC,2BAAoB,iDAbH;AAcjBC,8BAAoB,UAAUpC,SAdb;AAejBqC,0BAAoB,4BAfH;AAgBjBC,6BAAoB,wBAhBH;AAiBjBC,yBAAoB,aAjBH;AAkBjBC,kBAAoB;AAlBH,SADE;AAqBrBxD,iBAAU;AACR;AACA0C,gBAAoB1B,SAFZ;AAGR2B,qBAAoBnB,oBAHZ;AAIR;AACAqB,0BAAoB,EALZ;AAMRC,uBAAoB,IANZ;AAORC,gBAAoB,EAPZ;AAQRC,0BAAoB,EARZ;AASRE,sBAAoB,MATZ;AAUR;AACAC,2BAAqB,0DAXb;AAYRC,8BAAqB,iBAZb;AAaRC,0BAAqB,2BAbb;AAcRC,6BAAqB,0BAdb;AAeRE,kBAAqB;AAfb;AArBW,OAfzB;AAAA,UAsDEC,OAAO;AACLC,aAAW1C,YAAY,WADlB;AAEL2C,cAAW3C,YAAY,cAFlB;AAGL4C,eAAW5C,YAAY,oBAHlB;AAIL6C,gBAAW7C,YAAY,gBAJlB;AAKL8C,aAAW9C,YAAY,oBALlB;AAML+C,eAAW/C,YAAY,uBANlB;AAOLgD,kBAAWhD,YAAY,uBAPlB;AAQL,mBAAWA,YAAY,sBARlB;AASLiD,gBAAWjD,YAAY;AATlB,OAtDT;AAAA,UAiEE;AACAkD,iBAAW;AACTC,gBAAYlD,kBAAkB,aAAlB,GAAkCD,SAAlC,GAA8C,QADjD;AAETA,mBAAYC,kBAAkB,GAAlB,GAAwBD,SAAxB,GAAoC;AAFvC,OAlEb,CAFmB,CA0EnB;;AACA9B,WAAKuE,IAAL,CAAUA,KAAKE,IAAf,EAAqB,KAArB,EAA4B,YAAW;AACrC,eAAOzE,KAAKkF,GAAL,CAAShE,QAAQiE,MAAR,GAAiBrD,SAAjB,GAA6B,IAAtC,EACJsD,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGJ2E,IAHI,CAGCtE,QAAQI,QAAQI,KAAR,CAAc6D,MAAtB,EAA8BjE,QAAQI,KAAR,CAAcD,MAA5C,CAHD,EAIJ+D,IAJI,CAICpF,KAAKqF,IAAL,CAAUtD,eAAV,CAJD,CAAP;AAMD,OAPD,EA3EmB,CAoFnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKK,GAAf,EAAoB,KAApB,EAA2B,YAAW;AACpC,eAAO5E,KAAKkF,GAAL,CAAShE,QAAQiE,MAAR,GAAiBrD,SAAjB,GAA6B,mBAAtC,EACJsD,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGJ2E,IAHI,CAGCtE,QAAQwC,OAAOC,KAAP,CAAaU,eAArB,EAAsCX,OAAOxC,OAAP,CAAemD,eAArD,CAHD,EAIJmB,IAJI,CAICtE,QAAQwC,OAAOC,KAAP,CAAaW,kBAArB,EAAyCZ,OAAOxC,OAAP,CAAeoD,kBAAxD,CAJD,EAKJkB,IALI,CAKCtE,QAAQwC,OAAOC,KAAP,CAAaY,cAArB,EAAqCb,OAAOxC,OAAP,CAAeqD,cAApD,CALD,EAMJiB,IANI,CAMCtE,QAAQwC,OAAOC,KAAP,CAAaa,iBAArB,EAAwCd,OAAOxC,OAAP,CAAesD,iBAAvD,CAND,EAOJgB,IAPI,CAOCtE,QAAQwC,OAAOC,KAAP,CAAae,MAArB,EAA6BhB,OAAOxC,OAAP,CAAewD,MAA5C,CAPD,EAQJc,IARI,CAQCvE,OAAO,UAAP,CARD,EASJuE,IATI,CASCpF,KAAKqF,IAAL,CAAUtD,eAAV,CATD,CAAP;AAWD,OAZD,EArFmB,CAmGnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKI,MAAf,EAAuB,KAAvB,EAA8B,YAAW;AACvC,eAAO3E,KAAKkF,GAAL,CAAShE,QAAQoE,SAAR,CAAkBX,MAA3B,EACJS,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGJ2E,IAHI,CAGCtE,QAAQwC,OAAOC,KAAP,CAAaC,IAArB,EAA2BF,OAAOxC,OAAP,CAAe0C,IAA1C,CAHD,EAIJ4B,IAJI,CAICtE,QAAQwC,OAAOC,KAAP,CAAaE,SAArB,EAAgCH,OAAOxC,OAAP,CAAe2C,SAA/C,CAJD,EAKJ2B,IALI,CAKCpF,KAAKqF,IAAL,CAAUtD,eAAV,CALD,CAAP;AAOD,OARD,EApGmB,CA8GnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKG,KAAf,EAAsB,KAAtB,EAA6B,YAAW;AACtC,eAAO1E,KAAKkF,GAAL,CAAShE,QAAQoE,SAAR,CAAkBZ,KAA3B,EACJU,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGJ2E,IAHI,CAGCzE,WAAW,UAAS+D,KAAT,EAAgB;AAC/BA,gBAAMlB,IAAN,GAAad,WAAb;AACAgC,gBAAMa,WAAN,GAAoBjD,uBAAuB,gBAA3C;;AACA,cAAGJ,YAAH,EAAiB;AACf,gBAAGG,KAAH,EAAU;AACRqC,oBAAMc,IAAN,GAAa,CACX1D,YAAY,KADD,EAEXA,YAAY,MAFD,CAAb;AAID,aALD,MAMK;AACH4C,oBAAMc,IAAN,GAAa,CACX1D,YAAY,KADD,CAAb;AAGD;;AACD4C,kBAAMe,YAAN,GAAqB;AACnBC,sBAAQ;AADW,aAArB;AAGD,WAfD,MAgBK;AACHhB,kBAAMc,IAAN,GAAa,CACX1D,YAAY,MADD,CAAb;AAGD;;AACD,iBAAO4C,KAAP;AACD,SAzBK,CAHD,EA6BJU,IA7BI,CA6BCpF,KAAKqF,IAAL,CAAUtD,eAAV,CA7BD,CAAP;AA+BD,OAhCD,EA/GmB,CAiJnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKoB,OAAf,EAAwB,KAAxB,EAA+B,YAAW;AACxC,eAAO3F,KAAKkF,GAAL,CAAShE,QAAQoE,SAAR,CAAkBK,OAA3B,EACJP,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGJ2E,IAHI,CAGCzE,WAAW,UAASiE,GAAT,EAAc;AAC7B,cAAG1C,YAAH,EAAiB;AACf0C,gBAAIa,YAAJ,GAAmB;AACjBC,sBAAQ;AADS,aAAnB;AAGAd,gBAAIY,IAAJ,GAAW,UAAX;AACD;;AACDZ,cAAIpB,IAAJ,GAAWd,WAAX;;AACA,cAAGtB,OAAH,EAAY;AACVwD,gBAAIxD,OAAJ,GAAcA,OAAd;AACD;;AACDwD,cAAIgB,KAAJ,GAAkB,mBAAmBtD,oBAArC;AACAsC,cAAIW,WAAJ,GAAkB,iCAAiCzD,SAAnD;AACA8C,cAAIiB,UAAJ,GAAkB;AAChBC,kBAAO,KADS;AAEhBC,iBAAOjD;AAFS,WAAlB;AAIA,iBAAO8B,GAAP;AACD,SAlBK,CAHD,EAsBJQ,IAtBI,CAsBCpF,KAAKqF,IAAL,CAAUtD,eAAV,CAtBD,CAAP;AAwBD,OAzBD,EAlJmB,CA6KnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKO,QAAf,EAAyB,KAAzB,EAAgC,YAAW;AACzC,eAAO9E,KAAKkF,GAAL,CAAShE,QAAQoE,SAAR,CAAkBR,QAA3B,EACJM,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGJ2E,IAHI,CAGCzE,WAAW,UAASmE,QAAT,EAAmB;AAClC,cAAG5C,YAAH,EAAiB;AACf4C,qBAASW,YAAT,GAAwB;AACtBC,sBAAQ;AADc,aAAxB;AAGAZ,qBAASU,IAAT,GAAgB1D,YAAY,KAA5B;AACD;;AACDgD,mBAAStB,IAAT,GAAgB,cAAc1B,SAA9B;;AACA,cAAGV,OAAH,EAAY;AACV0D,qBAAS1D,OAAT,GAAmBA,OAAnB;AACD;;AACD0D,mBAASS,WAAT,GAAuB,iCAAiCzD,SAAxD;AACA,iBAAOgD,QAAP;AACD,SAbK,CAHD,EAiBJM,IAjBI,CAiBCpF,KAAKqF,IAAL,CAAUtD,eAAV,CAjBD,CAAP;AAmBD,OApBD,EA9KmB,CAoMnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKM,KAAf,EAAsB,KAAtB,EAA6B,YAAW;AACtC,eAAO7E,KAAKkF,GAAL,CAAShE,QAAQoE,SAAR,CAAkBT,KAA3B,EACJO,IADI,CACCxE,SADD,EAEJwE,IAFI,CAEC3E,SAFD,EAGL;AAHK,SAIJ2E,IAJI,CAICtE,QAAQwC,OAAOC,KAAP,CAAaO,cAArB,EAAqCR,OAAOxC,OAAP,CAAegD,cAApD,CAJD,EAKJsB,IALI,CAKCtE,QAAQwC,OAAOC,KAAP,CAAaS,UAArB,EAAiCV,OAAOxC,OAAP,CAAekD,UAAhD,CALD,EAMJoB,IANI,CAMCtE,QAAQwC,OAAOC,KAAP,CAAaI,cAArB,EAAqCL,OAAOxC,OAAP,CAAe6C,cAApD,CAND,EAOJyB,IAPI,CAOCtE,QAAQwC,OAAOC,KAAP,CAAaK,WAArB,EAAkCN,OAAOxC,OAAP,CAAe8C,WAAjD,CAPD,EAQJwB,IARI,CAQCtE,QAAQwC,OAAOC,KAAP,CAAaM,IAArB,EAA2BP,OAAOxC,OAAP,CAAe+C,IAA1C,CARD,EASJuB,IATI,CASCpF,KAAKqF,IAAL,CAAUtD,eAAV,CATD,CAAP;AAWD,OAZD,EArMmB,CAmNnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKQ,MAAf,EAAuB,YAAW;AAChC,YACEiB,YAAY,EADd;AAGA,eAAOhG,KAAKkF,GAAL,CAASF,SAASlD,SAAlB,EACJsD,IADI,CACC7E,gBAAgB,WAAhB,EAA6B0C,cAA7B,CADD,EAEJmC,IAFI,CAECrE,IAAI,UAASkF,IAAT,EAAe;AACvBD,uBAAaC,KAAKC,QAAlB;AACD,SAFK,CAFD,EAKJC,EALI,CAKD,KALC,EAKM,YAAW;AACpBnG,eAAKkF,GAAL,CAASF,SAASC,MAAlB,EACGG,IADH,CACQ7E,gBAAgB,WAAhB,EAA6B0C,cAA7B,CADR,EAEGmC,IAFH,CAEQrE,IAAI,UAASkF,IAAT,EAAe;AACvBD,yBAAaC,KAAKC,QAAlB;AACD,WAFK,CAFR,EAKGC,EALH,CAKM,KALN,EAKa,YAAW;AACpB;AACAH,wBAAYA,UAAUlF,OAAV,CAAkBwC,OAAOC,KAAP,CAAac,aAA/B,EAA8C,EAA9C,EAAkDR,IAAlD,EAAZ;AACA7D,iBAAKkF,GAAL,CAAShE,QAAQoE,SAAR,CAAkBP,MAAlB,CAAyBjD,SAAlC,EACGsD,IADH,CACQxE,SADR,EAEGwE,IAFH,CAEQ3E,SAFR,EAGG2E,IAHH,CAGQtE,QAAQwC,OAAOC,KAAP,CAAaC,IAArB,EAA2BF,OAAOxC,OAAP,CAAe0C,IAA1C,CAHR,EAIG4B,IAJH,CAIQtE,QAAQwC,OAAOC,KAAP,CAAaE,SAArB,EAAgCH,OAAOxC,OAAP,CAAe2C,SAA/C,CAJR,EAKG2B,IALH,CAKQtE,QAAQwC,OAAOC,KAAP,CAAanC,OAArB,EAA8BA,OAA9B,CALR,EAMGgE,IANH,CAMQtE,QAAQwC,OAAOC,KAAP,CAAaG,KAArB,EAA4BsC,SAA5B,CANR,EAOGZ,IAPH,CAOQvE,OAAOK,QAAQwC,KAAR,CAAcqB,MAArB,CAPR,EAQGK,IARH,CAQQpF,KAAKqF,IAAL,CAAUtD,eAAV,CARR;AAUD,WAlBH;AAoBD,SA1BI,CAAP;AA4BD,OAhCD,EApNmB,CAuPnB;;AACA/B,WAAKuE,IAAL,CAAUA,KAAKC,GAAf,EAAoB,KAApB,EAA2B,UAAS/C,QAAT,EAAmB;AAC5CnB,oBAAY,CACViE,KAAKE,IADK,EAEVF,KAAKK,GAFK,EAGVL,KAAKG,KAHK,EAIVH,KAAKI,MAJK,EAKVJ,KAAKoB,OALK,EAMVpB,KAAKO,QANK,EAOVP,KAAKM,KAPK,EAQVN,KAAKQ,MARK,CAAZ,EASGtD,QATH;AAUD,OAXD;AAaAG,YAAMwE,IAAN,CAAW7B,KAAKC,GAAhB;AAED,KAvQD,EAuQG1C,SAvQH;AAwQD;;AAEDxB,cAAYsB,KAAZ,EAAmBH,QAAnB;AACD,CAzRD","sourcesContent":["/*******************************\n     Create Component Repos\n*******************************/\n\n/*\n This will create individual component repositories for each SUI component\n\n  * copy component files from release\n  * create commonjs files as index.js for NPM release\n  * create release notes that filter only items related to component\n  * custom package.json file from template\n  * create bower.json from template\n  * create README from template\n  * create meteor.js file\n*/\n\nvar\n  gulp            = require('gulp'),\n\n  // node dependencies\n  console         = require('better-console'),\n  del             = require('del'),\n  fs              = require('fs'),\n  path            = require('path'),\n  runSequence     = require('run-sequence'),\n\n  // admin dependencies\n  concatFileNames = require('gulp-concat-filenames'),\n  debug           = require('gulp-debug'),\n  flatten         = require('gulp-flatten'),\n  git             = require('gulp-git'),\n  jsonEditor      = require('gulp-json-editor'),\n  plumber         = require('gulp-plumber'),\n  rename          = require('gulp-rename'),\n  replace         = require('gulp-replace'),\n  tap             = require('gulp-tap'),\n  util            = require('gulp-util'),\n\n  // config\n  config          = require('../../config/user'),\n  release         = require('../../config/admin/release'),\n  project         = require('../../config/project/release'),\n\n  // shorthand\n  version         = project.version,\n  output          = config.paths.output\n\n;\n\n\nmodule.exports = function(callback) {\n  var\n    stream,\n    index,\n    tasks = []\n  ;\n\n  for(index in release.components) {\n\n    var\n      component = release.components[index]\n    ;\n\n    // streams... designed to save time and make coding fun...\n    (function(component) {\n\n      var\n        outputDirectory      = path.join(release.outputRoot, component),\n        isJavascript         = fs.existsSync(output.compressed + component + '.js'),\n        isCSS                = fs.existsSync(output.compressed + component + '.css'),\n        capitalizedComponent = component.charAt(0).toUpperCase() + component.slice(1),\n        packageName          = release.packageRoot + component,\n        repoName             = release.componentRepoRoot + capitalizedComponent,\n        gitURL               = 'https://github.com/' + release.org + '/' + repoName + '.git',\n        repoURL              = 'https://github.com/' + release.org + '/' + repoName + '/',\n        concatSettings = {\n          newline : '',\n          root    : outputDirectory,\n          prepend : \"    '\",\n          append  : \"',\"\n        },\n        regExp               = {\n          match            : {\n            // templated values\n            name      : '{component}',\n            titleName : '{Component}',\n            version   : '{version}',\n            files     : '{files}',\n            // release notes\n            spacedVersions    : /(###.*\\n)\\n+(?=###)/gm,\n            spacedLists       : /(^- .*\\n)\\n+(?=^-)/gm,\n            trim              : /^\\s+|\\s+$/g,\n            unrelatedNotes    : new RegExp('^((?!(^.*(' + component + ').*$|###.*)).)*$', 'gmi'),\n            whitespace        : /\\n\\s*\\n\\s*\\n/gm,\n            // npm\n            componentExport   : /(.*)\\$\\.fn\\.\\w+\\s*=\\s*function\\(([^\\)]*)\\)\\s*{/g,\n            componentReference: '$.fn.' + component,\n            settingsExport    : /\\$\\.fn\\.\\w+\\.settings\\s*=/g,\n            settingsReference : /\\$\\.fn\\.\\w+\\.settings/g,\n            trailingComma     : /,(?=[^,]*$)/,\n            jQuery            : /jQuery/g,\n          },\n          replace : {\n            // readme\n            name              : component,\n            titleName         : capitalizedComponent,\n            // release notes\n            spacedVersions    : '',\n            spacedLists       : '$1',\n            trim              : '',\n            unrelatedNotes    : '',\n            whitespace        : '\\n\\n',\n            // npm\n            componentExport   :  'var _module = module;\\n$1module.exports = function($2) {',\n            componentReference:  '_module.exports',\n            settingsExport    :  'module.exports.settings =',\n            settingsReference :  '_module.exports.settings',\n            jQuery            :  'require(\"jquery\")'\n          }\n        },\n        task = {\n          all      : component + ' creating',\n          repo     : component + ' create repo',\n          bower    : component + ' create bower.json',\n          readme   : component + ' create README',\n          npm      : component + ' create NPM Module',\n          notes    : component + ' create release notes',\n          composer : component + ' create composer.json',\n          package  : component + ' create package.json',\n          meteor   : component + ' create meteor package.js',\n        },\n        // paths to includable assets\n        manifest = {\n          assets    : outputDirectory + '/assets/**/' + component + '?(s).*',\n          component : outputDirectory + '/' + component + '+(.js|.css)'\n        }\n      ;\n\n      // copy dist files into output folder adjusting asset paths\n      gulp.task(task.repo, false, function() {\n        return gulp.src(release.source + component + '.*')\n          .pipe(plumber())\n          .pipe(flatten())\n          .pipe(replace(release.paths.source, release.paths.output))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // create npm module\n      gulp.task(task.npm, false, function() {\n        return gulp.src(release.source + component + '!(*.min|*.map).js')\n          .pipe(plumber())\n          .pipe(flatten())\n          .pipe(replace(regExp.match.componentExport, regExp.replace.componentExport))\n          .pipe(replace(regExp.match.componentReference, regExp.replace.componentReference))\n          .pipe(replace(regExp.match.settingsExport, regExp.replace.settingsExport))\n          .pipe(replace(regExp.match.settingsReference, regExp.replace.settingsReference))\n          .pipe(replace(regExp.match.jQuery, regExp.replace.jQuery))\n          .pipe(rename('index.js'))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // create readme\n      gulp.task(task.readme, false, function() {\n        return gulp.src(release.templates.readme)\n          .pipe(plumber())\n          .pipe(flatten())\n          .pipe(replace(regExp.match.name, regExp.replace.name))\n          .pipe(replace(regExp.match.titleName, regExp.replace.titleName))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // extend bower.json\n      gulp.task(task.bower, false, function() {\n        return gulp.src(release.templates.bower)\n          .pipe(plumber())\n          .pipe(flatten())\n          .pipe(jsonEditor(function(bower) {\n            bower.name = packageName;\n            bower.description = capitalizedComponent + ' - Semantic UI';\n            if(isJavascript) {\n              if(isCSS) {\n                bower.main = [\n                  component + '.js',\n                  component + '.css'\n                ];\n              }\n              else {\n                bower.main = [\n                  component + '.js'\n                ];\n              }\n              bower.dependencies = {\n                jquery: '>=1.8'\n              };\n            }\n            else {\n              bower.main = [\n                component + '.css'\n              ];\n            }\n            return bower;\n          }))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // extend package.json\n      gulp.task(task.package, false, function() {\n        return gulp.src(release.templates.package)\n          .pipe(plumber())\n          .pipe(flatten())\n          .pipe(jsonEditor(function(npm) {\n            if(isJavascript) {\n              npm.dependencies = {\n                jquery: 'x.x.x'\n              };\n              npm.main = 'index.js';\n            }\n            npm.name = packageName;\n            if(version) {\n              npm.version = version;\n            }\n            npm.title       = 'Semantic UI - ' + capitalizedComponent;\n            npm.description = 'Single component release of ' + component;\n            npm.repository  = {\n              type : 'git',\n              url  : gitURL\n            };\n            return npm;\n          }))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // extend composer.json\n      gulp.task(task.composer, false, function() {\n        return gulp.src(release.templates.composer)\n          .pipe(plumber())\n          .pipe(flatten())\n          .pipe(jsonEditor(function(composer) {\n            if(isJavascript) {\n              composer.dependencies = {\n                jquery: 'x.x.x'\n              };\n              composer.main = component + '.js';\n            }\n            composer.name = 'semantic/' + component;\n            if(version) {\n              composer.version = version;\n            }\n            composer.description = 'Single component release of ' + component;\n            return composer;\n          }))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // create release notes\n      gulp.task(task.notes, false, function() {\n        return gulp.src(release.templates.notes)\n          .pipe(plumber())\n          .pipe(flatten())\n          // Remove release notes for lines not mentioning component\n          .pipe(replace(regExp.match.unrelatedNotes, regExp.replace.unrelatedNotes))\n          .pipe(replace(regExp.match.whitespace, regExp.replace.whitespace))\n          .pipe(replace(regExp.match.spacedVersions, regExp.replace.spacedVersions))\n          .pipe(replace(regExp.match.spacedLists, regExp.replace.spacedLists))\n          .pipe(replace(regExp.match.trim, regExp.replace.trim))\n          .pipe(gulp.dest(outputDirectory))\n        ;\n      });\n\n      // Creates meteor package.js\n      gulp.task(task.meteor, function() {\n        var\n          filenames = ''\n        ;\n        return gulp.src(manifest.component)\n          .pipe(concatFileNames('empty.txt', concatSettings))\n          .pipe(tap(function(file) {\n            filenames += file.contents;\n          }))\n          .on('end', function() {\n            gulp.src(manifest.assets)\n              .pipe(concatFileNames('empty.txt', concatSettings))\n              .pipe(tap(function(file) {\n                filenames += file.contents;\n              }))\n              .on('end', function() {\n                // remove trailing slash\n                filenames = filenames.replace(regExp.match.trailingComma, '').trim();\n                gulp.src(release.templates.meteor.component)\n                  .pipe(plumber())\n                  .pipe(flatten())\n                  .pipe(replace(regExp.match.name, regExp.replace.name))\n                  .pipe(replace(regExp.match.titleName, regExp.replace.titleName))\n                  .pipe(replace(regExp.match.version, version))\n                  .pipe(replace(regExp.match.files, filenames))\n                  .pipe(rename(release.files.meteor))\n                  .pipe(gulp.dest(outputDirectory))\n                ;\n              })\n            ;\n          })\n        ;\n      });\n\n\n      // synchronous tasks in orchestrator? I think not\n      gulp.task(task.all, false, function(callback) {\n        runSequence([\n          task.repo,\n          task.npm,\n          task.bower,\n          task.readme,\n          task.package,\n          task.composer,\n          task.notes,\n          task.meteor\n        ], callback);\n      });\n\n      tasks.push(task.all);\n\n    })(component);\n  }\n\n  runSequence(tasks, callback);\n};\n"]},"sourceType":"script","hash":"0487d2caa29b820a8448bcaa8d19f9db9db4d255"}
